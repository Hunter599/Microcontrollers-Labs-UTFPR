


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ; ------------------------------------------------------
                       -------------------------
    3 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    4 00000000         ; ------------------------------------------------------
                       -------------------------
    5 00000000         ; Declarações EQU - Defines
    6 00000000         ; ========================
    7 00000000 00000000 
                       GET_PASSWORD
                               EQU              0
    8 00000000 00000001 
                       SET_PASSWORD
                               EQU              1
    9 00000000 00000006 
                       LOCKED  EQU              6
   10 00000000 00000007 
                       LOCKED_MASTER
                               EQU              7
   11 00000000         
   12 00000000         ; ========================
   13 00000000         ; Definições dos Registradores Gerais
   14 00000000         ; All register values were taken from tm4c1294ncpdt.h - 
                       TM4C1294NCPDT Register Definitions
   15 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   16 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   17 00000000         ; ========================
   18 00000000         ; Definições dos Ports
   19 00000000         
   20 00000000         ; PORT A
   21 00000000 40058520 
                       GPIO_PORTA_AHB_LOCK_R
                               EQU              0x40058520
   22 00000000 40058524 
                       GPIO_PORTA_AHB_CR_R
                               EQU              0x40058524
   23 00000000 40058528 
                       GPIO_PORTA_AHB_AMSEL_R
                               EQU              0x40058528
   24 00000000 4005852C 
                       GPIO_PORTA_AHB_PCTL_R
                               EQU              0x4005852C
   25 00000000 40058400 
                       GPIO_PORTA_AHB_DIR_R
                               EQU              0x40058400
   26 00000000 40058420 
                       GPIO_PORTA_AHB_AFSEL_R
                               EQU              0x40058420
   27 00000000 4005851C 
                       GPIO_PORTA_AHB_DEN_R
                               EQU              0x4005851C
   28 00000000 40058510 
                       GPIO_PORTA_AHB_PUR_R
                               EQU              0x40058510



ARM Macro Assembler    Page 2 


   29 00000000 400583FC 
                       GPIO_PORTA_AHB_DATA_R
                               EQU              0x400583FC
   30 00000000 40058000 
                       GPIO_PORTA_AHB_DATA_BITS_R
                               EQU              0x40058000
   31 00000000 00000001 
                       GPIO_PORTA
                               EQU              2_000000000000001 
                                                            ; SYSCTL_PPGPIO_P0
   32 00000000         
   33 00000000         ; PORT J
   34 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   35 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   36 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   37 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   38 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   39 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   40 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   41 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   42 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   43 00000000 40060000 
                       GPIO_PORTJ_AHB_DATA_BITS_R
                               EQU              0x40060000
   44 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000 
                                                            ; SYSCTL_PPGPIO_P8
   45 00000000         
   46 00000000         ; PORT K
   47 00000000 40061520 
                       GPIO_PORTK_LOCK_R
                               EQU              0x40061520
   48 00000000 40061524 
                       GPIO_PORTK_CR_R
                               EQU              0x40061524
   49 00000000 40061528 
                       GPIO_PORTK_AMSEL_R
                               EQU              0x40061528
   50 00000000 4006152C 
                       GPIO_PORTK_PCTL_R



ARM Macro Assembler    Page 3 


                               EQU              0x4006152C
   51 00000000 40061400 
                       GPIO_PORTK_DIR_R
                               EQU              0x40061400
   52 00000000 40061420 
                       GPIO_PORTK_AFSEL_R
                               EQU              0x40061420
   53 00000000 4006151C 
                       GPIO_PORTK_DEN_R
                               EQU              0x4006151C
   54 00000000 40061510 
                       GPIO_PORTK_PUR_R
                               EQU              0x40061510
   55 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   56 00000000 40061000 
                       GPIO_PORTK_DATA_BITS_R
                               EQU              0x40061000
   57 00000000 00000200 
                       GPIO_PORTK
                               EQU              2_000001000000000 
                                                            ; SYSCTL_PPGPIO_P9
   58 00000000         
   59 00000000         ; PORT L
   60 00000000 40062520 
                       GPIO_PORTL_LOCK_R
                               EQU              0x40062520
   61 00000000 40062524 
                       GPIO_PORTL_CR_R
                               EQU              0x40062524
   62 00000000 40062528 
                       GPIO_PORTL_AMSEL_R
                               EQU              0x40062528
   63 00000000 4006252C 
                       GPIO_PORTL_PCTL_R
                               EQU              0x4006252C
   64 00000000 40062400 
                       GPIO_PORTL_DIR_R
                               EQU              0x40062400
   65 00000000 40062420 
                       GPIO_PORTL_AFSEL_R
                               EQU              0x40062420
   66 00000000 4006251C 
                       GPIO_PORTL_DEN_R
                               EQU              0x4006251C
   67 00000000 40062510 
                       GPIO_PORTL_PUR_R
                               EQU              0x40062510
   68 00000000 400623FC 
                       GPIO_PORTL_DATA_R
                               EQU              0x400623FC
   69 00000000 00000400 
                       GPIO_PORTL
                               EQU              2_000010000000000 
                                                            ; SYSCTL_PPGPIO_P10
                                                            
   70 00000000         
   71 00000000         ; PORT M



ARM Macro Assembler    Page 4 


   72 00000000 40063520 
                       GPIO_PORTM_LOCK_R
                               EQU              0x40063520
   73 00000000 40063524 
                       GPIO_PORTM_CR_R
                               EQU              0x40063524
   74 00000000 40063528 
                       GPIO_PORTM_AMSEL_R
                               EQU              0x40063528
   75 00000000 4006352C 
                       GPIO_PORTM_PCTL_R
                               EQU              0x4006352C
   76 00000000 40063400 
                       GPIO_PORTM_DIR_R
                               EQU              0x40063400
   77 00000000 40063420 
                       GPIO_PORTM_AFSEL_R
                               EQU              0x40063420
   78 00000000 4006351C 
                       GPIO_PORTM_DEN_R
                               EQU              0x4006351C
   79 00000000 40063510 
                       GPIO_PORTM_PUR_R
                               EQU              0x40063510
   80 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   81 00000000 00000800 
                       GPIO_PORTM
                               EQU              2_000100000000000 
                                                            ; SYSCTL_PPGPIO_P11
                                                            
   82 00000000         
   83 00000000         ; PORT P
   84 00000000 40065520 
                       GPIO_PORTP_LOCK_R
                               EQU              0x40065520
   85 00000000 40065524 
                       GPIO_PORTP_CR_R
                               EQU              0x40065524
   86 00000000 40065528 
                       GPIO_PORTP_AMSEL_R
                               EQU              0x40065528
   87 00000000 4006552C 
                       GPIO_PORTP_PCTL_R
                               EQU              0x4006552C
   88 00000000 40065400 
                       GPIO_PORTP_DIR_R
                               EQU              0x40065400
   89 00000000 40065420 
                       GPIO_PORTP_AFSEL_R
                               EQU              0x40065420
   90 00000000 4006551C 
                       GPIO_PORTP_DEN_R
                               EQU              0x4006551C
   91 00000000 40065510 
                       GPIO_PORTP_PUR_R
                               EQU              0x40065510
   92 00000000 400653FC 



ARM Macro Assembler    Page 5 


                       GPIO_PORTP_DATA_R
                               EQU              0x400653FC
   93 00000000 40065000 
                       GPIO_PORTP_DATA_BITS_R
                               EQU              0x40065000
   94 00000000 00002000 
                       GPIO_PORTP
                               EQU              2_010000000000000 
                                                            ; SYSCTL_PPGPIO_P13
                                                            
   95 00000000         
   96 00000000         ; PORT Q
   97 00000000 40066520 
                       GPIO_PORTQ_LOCK_R
                               EQU              0x40066520
   98 00000000 40066524 
                       GPIO_PORTQ_CR_R
                               EQU              0x40066524
   99 00000000 40066528 
                       GPIO_PORTQ_AMSEL_R
                               EQU              0x40066528
  100 00000000 4006652C 
                       GPIO_PORTQ_PCTL_R
                               EQU              0x4006652C
  101 00000000 40066400 
                       GPIO_PORTQ_DIR_R
                               EQU              0x40066400
  102 00000000 40066420 
                       GPIO_PORTQ_AFSEL_R
                               EQU              0x40066420
  103 00000000 4006651C 
                       GPIO_PORTQ_DEN_R
                               EQU              0x4006651C
  104 00000000 40066510 
                       GPIO_PORTQ_PUR_R
                               EQU              0x40066510
  105 00000000 400663FC 
                       GPIO_PORTQ_DATA_R
                               EQU              0x400663FC
  106 00000000 40066000 
                       GPIO_PORTQ_DATA_BITS_R
                               EQU              0x40066000
  107 00000000 00004000 
                       GPIO_PORTQ
                               EQU              2_100000000000000 
                                                            ; SYSCTL_PPGPIO_P14
                                                            
  108 00000000         
  109 00000000         ; Interrupções
  110 00000000         
  111 00000000         ; PORT J Interrupção
  112 00000000 40060404 
                       GPIO_PORTJ_IS_R
                               EQU              0x40060404
  113 00000000 40060408 
                       GPIO_PORTJ_IBE_R
                               EQU              0x40060408
  114 00000000 4006040C 
                       GPIO_PORTJ_IEV_R



ARM Macro Assembler    Page 6 


                               EQU              0x4006040C
  115 00000000 40060410 
                       GPIO_PORTJ_IM_R
                               EQU              0x40060410
  116 00000000 4006041C 
                       GPIO_PORTJ_ICR_R
                               EQU              0x4006041C
  117 00000000 E000E430 
                       NVIC_PRI12_R
                               EQU              0xE000E430
  118 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
  119 00000000 40060414 
                       GPIO_PORTJ_RIS_R
                               EQU              0x40060414
  120 00000000         
  121 00000000         ;------------------- TIMER ----------------------------
  122 00000000         
  123 00000000 400FE604 
                       SYSCTL_RCGCTIMER_R
                               EQU              0x400FE604
  124 00000000 400FEA04 
                       SYSCTL_PRTIMER_R
                               EQU              0x400FEA04
  125 00000000 4003200C 
                       TIMER2_CTL_R
                               EQU              0x4003200C
  126 00000000 40032000 
                       TIMER2_CFG_R
                               EQU              0x40032000
  127 00000000 40032004 
                       TIMER2_TAMR_R
                               EQU              0x40032004
  128 00000000 40032028 
                       TIMER2_TAILR_R
                               EQU              0x40032028
  129 00000000 40032038 
                       TIMER2_TAPR_R
                               EQU              0x40032038
  130 00000000 40032024 
                       TIMER2_ICR_R
                               EQU              0x40032024
  131 00000000 40032018 
                       TIMER2_IMR_R
                               EQU              0x40032018
  132 00000000 E000E414 
                       NVIC_PRI5_R
                               EQU              0xE000E414
  133 00000000 E000E100 
                       NVIC_EN0_R
                               EQU              0xE000E100
  134 00000000         
  135 00000000 00000020 
                       tranP   EQU              2_00100000
  136 00000000         ; ------------------------------------------------------
                       -------------------------
  137 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 



ARM Macro Assembler    Page 7 


  138 00000000         ;                  código
  139 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  140 00000000         
  141 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
  142 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
  143 00000000                 EXPORT           PortA_Output ; Permite chamar P
                                                            ortA_Output de outr
                                                            o arquivo
  144 00000000                 EXPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
  145 00000000                 EXPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
  146 00000000                 EXPORT           PortL_Input ; Permite chamar Po
                                                            rtL_Input de outro 
                                                            arquivo
  147 00000000                 EXPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
  148 00000000                 EXPORT           PortP_Output ; Permite chamar P
                                                            ortP_Output de outr
                                                            o arquivo
  149 00000000                 EXPORT           PortQ_Output ; Permite chamar P
                                                            ortQ_Output de outr
                                                            o arquivo
  150 00000000                 EXPORT           GPIOPortJ_Handler ; Permite cha
                                                            mar GPIOPortJ_Handl
                                                            er de outro arquivo
                                                            
  151 00000000                 EXPORT           Timer2A_Handler
  152 00000000         
  153 00000000         ; Se chamar alguma função externa
  154 00000000                 IMPORT           zerar_memoria
  155 00000000                 IMPORT           EnableInterrupts ; Chama Enable
                                                            Interrupts do arqui
                                                            vo "startup.s"
  156 00000000                 IMPORT           SysTick_Wait1ms
  157 00000000                 IMPORT           BlinkLED
  158 00000000         
  159 00000000         ;-------------------------------------------------------
                       -------------------------
  160 00000000         ; Função GPIO_Init
  161 00000000         ; Parâmetro de entrada: Não tem
  162 00000000         ; Parâmetro de saída: Não tem
  163 00000000         GPIO_Init
  164 00000000         ;=====================
  165 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
  166 00000000         ; após isso verificar no PRGPIO se a porta está pronta p
                       ara uso.
  167 00000000         ; enable clock to GPIOF at clock gating register
  168 00000000 48B0            LDR              R0, =SYSCTL_RCGCGPIO_R ; Carreg
                                                            a o endereço do reg
                                                            istrador RCGCGPIO



ARM Macro Assembler    Page 8 


  169 00000002 F04F 0101       MOV              R1, #GPIO_PORTA ; Seta o bit da
                                                             porta A
  170 00000006 F441 7180       ORR              R1, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  171 0000000A F441 7100       ORR              R1, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  172 0000000E F441 6180       ORR              R1, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  173 00000012 F441 6100       ORR              R1, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  174 00000016 F441 5100       ORR              R1, #GPIO_PORTP ; Seta o bit da
                                                             porta P, fazendo c
                                                            om OR
  175 0000001A F441 4180       ORR              R1, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  176 0000001E 6001            STR              R1, [R0]    ; Move para a memór
                                                            ia os bits das port
                                                            as no endereço do R
                                                            CGCGPIO
  177 00000020         
  178 00000020 48A9            LDR              R0, =SYSCTL_PRGPIO_R ; Carrega 
                                                            o endereço do PRGPI
                                                            O para esperar os G
                                                            PIO ficarem prontos
                                                            
  179 00000022 6801    EsperaGPIO
                               LDR              R1, [R0]    ; Lê da memória o c
                                                            onteúdo do endereço
                                                             do registrador
  180 00000024 F04F 0201       MOV              R2, #GPIO_PORTA ; Seta os bits 
                                                            correspondentes às 
                                                            portas para fazer a
                                                             comparação - Seta 
                                                            o bit da porta A
  181 00000028 F442 7280       ORR              R2, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  182 0000002C F442 7200       ORR              R2, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  183 00000030 F442 6280       ORR              R2, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  184 00000034 F442 6200       ORR              R2, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  185 00000038 F442 5200       ORR              R2, #GPIO_PORTP ; Seta o bit da
                                                             porta P, fazendo c
                                                            om OR
  186 0000003C F442 4280       ORR              R2, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  187 00000040 4211            TST              R1, R2      ; Testa o R1 com R2
                                                             fazendo R1 & R2



ARM Macro Assembler    Page 9 


  188 00000042 D0EE            BEQ              EsperaGPIO  ; Se o flag Z=1, vo
                                                            lta para o laço. Se
                                                            não continua execut
                                                            ando
  189 00000044         
  190 00000044         ; 2. Limpar o AMSEL para desabilitar a analógica
  191 00000044 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para desabi
                                                            litar a função anal
                                                            ógica
  192 00000048 48A0            LDR              R0, =GPIO_PORTA_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndereço do AMSEL pa
                                                            ra a porta A
  193 0000004A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             A da memória
  194 0000004C         
  195 0000004C 48A0            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndereço do AMSEL pa
                                                            ra a porta J
  196 0000004E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             J da memória
  197 00000050         
  198 00000050 48A0            LDR              R0, =GPIO_PORTK_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            eço do AMSEL para a
                                                             porta K
  199 00000052 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             K da memória
  200 00000054         
  201 00000054 48A0            LDR              R0, =GPIO_PORTL_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            eço do AMSEL para a
                                                             porta L
  202 00000056 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             L da memória
  203 00000058         
  204 00000058 48A0            LDR              R0, =GPIO_PORTM_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            eço do AMSEL para a
                                                             porta M
  205 0000005A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             M da memória
  206 0000005C         
  207 0000005C 48A0            LDR              R0, =GPIO_PORTP_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            eço do AMSEL para a
                                                             porta P
  208 0000005E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             P da memória
  209 00000060         
  210 00000060 48A0            LDR              R0, =GPIO_PORTQ_AMSEL_R ; Carre



ARM Macro Assembler    Page 10 


                                                            ga o R0 com o ender
                                                            eço do AMSEL para a
                                                             porta Q
  211 00000062 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             Q da memória
  212 00000064         
  213 00000064         ; 3. Limpar PCTL para selecionar o GPIO
  214 00000064 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para seleci
                                                            onar o modo GPIO
  215 00000068 489F            LDR              R0, =GPIO_PORTA_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dereço do PCTL para
                                                             a porta A
  216 0000006A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            A da memória
  217 0000006C         
  218 0000006C 489F            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dereço do PCTL para
                                                             a porta J
  219 0000006E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da memória
  220 00000070         
  221 00000070 489F            LDR              R0, =GPIO_PORTK_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta K
  222 00000072 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            K da memória
  223 00000074         
  224 00000074 489F            LDR              R0, =GPIO_PORTL_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta L
  225 00000076 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            L da memória
  226 00000078         
  227 00000078 489F            LDR              R0, =GPIO_PORTM_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta M
  228 0000007A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            M da memória
  229 0000007C         
  230 0000007C 489F            LDR              R0, =GPIO_PORTP_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta P
  231 0000007E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            P da memória
  232 00000080         



ARM Macro Assembler    Page 11 


  233 00000080 489F            LDR              R0, =GPIO_PORTQ_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta Q
  234 00000082 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            Q da memória
  235 00000084         
  236 00000084         ; 4. DIR para 0 se for entrada, 1 se for saída
  237 00000084 489F            LDR              R0, =GPIO_PORTA_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ereço do DIR para a
                                                             porta A
  238 00000086 F04F 01F0       MOV              R1, #2_11110000 ; PA7:PA4
  239 0000008A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  240 0000008C         
  241 0000008C         ; O certo era verificar os outros bits da PJ para não tr
                       ansformar entradas em saídas desnecessárias
  242 0000008C 489E            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ereço do DIR para a
                                                             porta J
  243 0000008E F04F 0100       MOV              R1, #2_00   ; PJ0
  244 00000092 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da memória
  245 00000094         
  246 00000094 489D            LDR              R0, =GPIO_PORTK_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta K
  247 00000096 F04F 01FF       MOV              R1, #2_11111111 ; PK7:PK0
  248 0000009A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  249 0000009C         
  250 0000009C 489C            LDR              R0, =GPIO_PORTL_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta L
  251 0000009E F04F 0100       MOV              R1, #2_00000000 ; PL3:PL0
  252 000000A2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  253 000000A4         
  254 000000A4 489B            LDR              R0, =GPIO_PORTM_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta M
  255 000000A6 F04F 01F7       MOV              R1, #2_11110111 
                                                            ; PM7:PM4 e PM2:PM0
                                                            
  256 000000AA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  257 000000AC         
  258 000000AC 489A            LDR              R0, =GPIO_PORTP_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta P
  259 000000AE F04F 0120       MOV              R1, #2_00100000 ; PP5



ARM Macro Assembler    Page 12 


  260 000000B2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  261 000000B4         
  262 000000B4 4899            LDR              R0, =GPIO_PORTQ_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta Q
  263 000000B6 F04F 010F       MOV              R1, #2_00001111 ; PQ3:PQ0
  264 000000BA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  265 000000BC         
  266 000000BC         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  267 000000BC         ;    Sem função alternativa
  268 000000BC F04F 0100       MOV              R1, #0x00   ; Colocar o valor 0
                                                             para não setar fun
                                                            ção alternativa
  269 000000C0         
  270 000000C0 4897            LDR              R0, =GPIO_PORTA_AHB_AFSEL_R ; C
                                                            arrega o endereço d
                                                            o AFSEL da porta A
  271 000000C2 6001            STR              R1, [R0]    ; Escreve na porta
  272 000000C4         
  273 000000C4 4897            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ; C
                                                            arrega o endereço d
                                                            o AFSEL da porta J
  274 000000C6 6001            STR              R1, [R0]    ; Escreve na porta
  275 000000C8         
  276 000000C8 4897            LDR              R0, =GPIO_PORTK_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta K
  277 000000CA 6001            STR              R1, [R0]    ; Escreve na porta
  278 000000CC         
  279 000000CC 4897            LDR              R0, =GPIO_PORTL_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta L
  280 000000CE 6001            STR              R1, [R0]    ; Escreve na porta
  281 000000D0         
  282 000000D0 4897            LDR              R0, =GPIO_PORTM_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta M
  283 000000D2 6001            STR              R1, [R0]    ; Escreve na porta
  284 000000D4         
  285 000000D4 4897            LDR              R0, =GPIO_PORTP_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta P
  286 000000D6 6001            STR              R1, [R0]    ; Escreve na porta
  287 000000D8         
  288 000000D8 4897            LDR              R0, =GPIO_PORTQ_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta Q
  289 000000DA 6001            STR              R1, [R0]    ; Escreve na porta
  290 000000DC         
  291 000000DC         ; 6. Setar os bits de DEN para habilitar I/O digital
  292 000000DC         ; Escrita amigável - Read-modify-write
  293 000000DC 4897            LDR              R0, =GPIO_PORTA_AHB_DEN_R ; Car
                                                            rega o endereço do 
                                                            DEN
  294 000000DE 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da



ARM Macro Assembler    Page 13 


                                                             porta inteira
  295 000000E0 F041 01F0       ORR              R1, R1, #2_11110000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PA7:PA4
  296 000000E4 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  297 000000E6         
  298 000000E6 4896            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ; Car
                                                            rega o endereço do 
                                                            DEN
  299 000000E8 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  300 000000EA F041 0103       ORR              R1, R1, #2_00000011 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PJ0
  301 000000EE 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  302 000000F0         
  303 000000F0 4894            LDR              R0, =GPIO_PORTK_DEN_R ; Carrega
                                                             o endereço do DEN
  304 000000F2 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  305 000000F4 F041 01FF       ORR              R1, R1, #2_11111111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PK7:PK0
  306 000000F8 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  307 000000FA         
  308 000000FA 4893            LDR              R0, =GPIO_PORTL_DEN_R ; Carrega
                                                             o endereço do DEN
  309 000000FC 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  310 000000FE F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PL3:PL0
  311 00000102 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  312 00000104         
  313 00000104 4891            LDR              R0, =GPIO_PORTM_DEN_R ; Carrega
                                                             o endereço do DEN



ARM Macro Assembler    Page 14 


  314 00000106 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  315 00000108 F041 01F7       ORR              R1, R1, #2_11110111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PM7:PM4 e PM2:PM
                                                            0
  316 0000010C 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  317 0000010E         
  318 0000010E 4890            LDR              R0, =GPIO_PORTP_DEN_R ; Carrega
                                                             o endereço do DEN
  319 00000110 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  320 00000112 F041 0120       ORR              R1, R1, #2_00100000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PP5
  321 00000116 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  322 00000118         
  323 00000118 488E            LDR              R0, =GPIO_PORTQ_DEN_R ; Carrega
                                                             o endereço do DEN
  324 0000011A 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  325 0000011C F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PQ3:PQ0
  326 00000120 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  327 00000122         
  328 00000122         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  329 00000122 488D            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ; Car
                                                            rega o endereço do 
                                                            PUR para a porta J
  330 00000124 F04F 0103       MOV              R1, #2_0011 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PJ0
  331 00000128 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória do
                                                             resistor de pull-u
                                                            p
  332 0000012A         
  333 0000012A 488C            LDR              R0, =GPIO_PORTL_PUR_R ; Carrega



ARM Macro Assembler    Page 15 


                                                             o endereço do PUR 
                                                            para a porta L
  334 0000012C F04F 010F       MOV              R1, #2_1111 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PL3:PL0
  335 00000130 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória do
                                                             resistor de pull-u
                                                            p
  336 00000132         
  337 00000132         ; 8. Interrupções
  338 00000132 498B            LDR              R1, =GPIO_PORTJ_IM_R
  339 00000134 F04F 0000       MOV              R0, #2_0    ; Desabilita a inte
                                                            rrupção na porta J0
                                                            
  340 00000138 6008            STR              R0, [R1]
  341 0000013A         
  342 0000013A F04F 0100       MOV              R1, #2_0
  343 0000013E 4889            LDR              R0, =GPIO_PORTJ_IS_R ; 0 para i
                                                            nterrupção de borda
                                                             e 1 para nível
  344 00000140 6001            STR              R1, [R0]
  345 00000142         
  346 00000142 F04F 0100       MOV              R1, #2_0
  347 00000146 4888            LDR              R0, =GPIO_PORTJ_IBE_R ; 0 para 
                                                            borda única
  348 00000148 6001            STR              R1, [R0]
  349 0000014A         
  350 0000014A F04F 0100       MOV              R1, #2_0
  351 0000014E 4887            LDR              R0, =GPIO_PORTJ_IEV_R ; 0 para 
                                                            borda de descida
  352 00000150 6001            STR              R1, [R0]
  353 00000152         
  354 00000152 4987            LDR              R1, =GPIO_PORTJ_ICR_R ; Configu
                                                            ra a interrupção na
                                                             porta PJ0 E PJ1
  355 00000154 F04F 0003       MOV              R0, #2_00000011
  356 00000158 6008            STR              R0, [R1]
  357 0000015A         
  358 0000015A 4981            LDR              R1, =GPIO_PORTJ_IM_R ; Habilita
                                                             a interrupção na p
                                                            orta J0 E J1
  359 0000015C F04F 0003       MOV              R0, #2_00000011
  360 00000160 6008            STR              R0, [R1]
  361 00000162         
  362 00000162 4984            LDR              R1, =NVIC_EN1_R ; Habilita a in
                                                            terrup??o no PortJ
  363 00000164 F04F 0001       MOV              R0, #1
  364 00000168 EA4F 40C0       LSL              R0, R0, #19
  365 0000016C 6008            STR              R0, [R1]
  366 0000016E         
  367 0000016E 4982            LDR              R1, =NVIC_PRI12_R ; Configura p
                                                            rioridade 5 nos bit
                                                            s 29 a 31
  368 00000170 F04F 0005       MOV              R0, #5
  369 00000174 EA4F 7040       LSL              R0, R0, #29
  370 00000178 6008            STR              R0, [R1]
  371 0000017A         



ARM Macro Assembler    Page 16 


  372 0000017A B500            PUSH             {LR}
  373 0000017C F7FF FFFE       BL               EnableInterrupts ; Liga a chave
                                                             das interrupções
  374 00000180 F85D EB04       POP              {LR}
  375 00000184         
  376 00000184         ;TIMER
  377 00000184         ;1
  378 00000184 487D            LDR              R0, =SYSCTL_RCGCTIMER_R
  379 00000186 6801            LDR              R1, [R0]
  380 00000188         
  381 00000188 F041 0104       ORR              R1, #0x04
  382 0000018C 6001            STR              R1, [R0]
  383 0000018E         
  384 0000018E 487C            LDR              R0, =SYSCTL_PRTIMER_R
  385 00000190 6801    EsperaTimer
                               LDR              R1, [R0]    ;Lê da memória o co
                                                            nteúdo do endereço 
                                                            do registrador
  386 00000192 F04F 0204       MOV              R2, #0x04   ;Seta o bit da port
                                                            a A
  387 00000196 4211            TST              R1, R2      ;ANDS de R1 com R2
  388 00000198 D0FA            BEQ              EsperaTimer ;Se o flag Z=1, vol
                                                            ta para o laço. Sen
                                                            ão continua executa
                                                            ndo
  389 0000019A         
  390 0000019A         ;2
  391 0000019A 487A            LDR              R0, =TIMER2_CTL_R
  392 0000019C 6801            LDR              R1, [R0]
  393 0000019E         
  394 0000019E F021 0101       AND              R1, #0xFFFFFFFE
  395 000001A2 6001            STR              R1, [R0]
  396 000001A4         
  397 000001A4         ;3
  398 000001A4 4878            LDR              R0, =TIMER2_CFG_R
  399 000001A6 6801            LDR              R1, [R0]
  400 000001A8         
  401 000001A8 F021 0107       AND              R1, #0xFFFFFFF8
  402 000001AC 6001            STR              R1, [R0]
  403 000001AE         
  404 000001AE         ;4
  405 000001AE 4877            LDR              R0, =TIMER2_TAMR_R
  406 000001B0 6801            LDR              R1, [R0]
  407 000001B2         
  408 000001B2 F021 0101       AND              R1, #0xFFFFFFFE
  409 000001B6 F041 0102       ORR              R1, #0x2
  410 000001BA 6001            STR              R1, [R0]
  411 000001BC         
  412 000001BC         ;5
  413 000001BC 4874            LDR              R0, =TIMER2_TAILR_R
  414 000001BE F241 11FF       MOV              R1, #0x11FF
  415 000001C2 F2C0 017A       MOVT             R1, #0x7A
  416 000001C6         
  417 000001C6 6001            STR              R1, [R0]
  418 000001C8         
  419 000001C8         ;6
  420 000001C8 4872            LDR              R0, =TIMER2_TAPR_R
  421 000001CA 6801            LDR              R1, [R0]
  422 000001CC         



ARM Macro Assembler    Page 17 


  423 000001CC F04F 0100       MOV              R1, #0x00
  424 000001D0 6001            STR              R1, [R0]
  425 000001D2         
  426 000001D2         ;7
  427 000001D2 4871            LDR              R0, =TIMER2_ICR_R
  428 000001D4 6801            LDR              R1, [R0]
  429 000001D6         
  430 000001D6 F041 0101       ORR              R1, #0x1
  431 000001DA 6001            STR              R1, [R0]
  432 000001DC         
  433 000001DC         ;8
  434 000001DC 486F            LDR              R0, =TIMER2_IMR_R
  435 000001DE 6801            LDR              R1, [R0]
  436 000001E0         
  437 000001E0 F041 0101       ORR              R1, #0x1
  438 000001E4 6001            STR              R1, [R0]
  439 000001E6         
  440 000001E6 F04F 0104       MOV              R1, #4
  441 000001EA EA4F 7141       LSL              R1, R1, #29
  442 000001EE         
  443 000001EE 486C            LDR              R0, =NVIC_PRI5_R
  444 000001F0 6001            STR              R1, [R0]
  445 000001F2         
  446 000001F2 F04F 0101       MOV              R1, #1
  447 000001F6 EA4F 51C1       LSL              R1, R1, #23
  448 000001FA         
  449 000001FA 486A            LDR              R0, =NVIC_EN0_R
  450 000001FC 6001            STR              R1, [R0]
  451 000001FE         
  452 000001FE 4861            LDR              R0, =TIMER2_CTL_R
  453 00000200 F04F 0101       MOV              R1, #1
  454 00000204 6001            STR              R1, [R0]
  455 00000206         
  456 00000206 4770            BX               LR
  457 00000208         
  458 00000208         ; ------------------------------------------------------
                       -------------------------
  459 00000208         ; Função PortA_Output
  460 00000208         ; Parâmetro de entrada: R0
  461 00000208         ; Parâmetro de saída: Não tem
  462 00000208         PortA_Output
  463 00000208 B407            PUSH             {R0, R1, R2}
  464 0000020A         
  465 0000020A 4967            LDR              R1, =GPIO_PORTA_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  466 0000020C         ; Read-Modify-Write para escrita
  467 0000020C 680A            LDR              R2, [R1]
  468 0000020E F022 02F0       BIC              R2, #2_11110000 ; Máscara com b
                                                            its 1 nas posições 
                                                            que queremos limpar
                                                             PA7:PA4
  469 00000212 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            parâmetro de entrad
                                                            a
  470 00000216 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            A



ARM Macro Assembler    Page 18 


  471 00000218         
  472 00000218 BC07            POP              {R0, R1, R2}
  473 0000021A 4770            BX               LR          ; Retorna
  474 0000021C         
  475 0000021C         ; Função PortJ_Input
  476 0000021C         ; Parâmetro de entrada: Não tem
  477 0000021C         ; Parâmetro de saída: R0 --> o valor da leitura
  478 0000021C         PortJ_Input
  479 0000021C B403            PUSH             {R0, R1}
  480 0000021E         
  481 0000021E 4963            LDR              R1, =GPIO_PORTJ_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  482 00000220 6808            LDR              R0, [R1]    ; Lê no barramento 
                                                            de dados dos pinos
  483 00000222         
  484 00000222 BC03            POP              {R0, R1}
  485 00000224 4770            BX               LR          ; Retorna
  486 00000226         
  487 00000226         ; Funcao GPIOPortJ_Handler
  488 00000226         ; Parametro de entrada: Nao tem
  489 00000226         ; Parametro de saida: R0 --> o valor a ser atualizado
  490 00000226         GPIOPortJ_Handler
  491 00000226 B503            PUSH             {R0, R1, LR}
  492 00000228 4961            LDR              R1, =GPIO_PORTJ_RIS_R
  493 0000022A 6808            LDR              R0, [R1]
  494 0000022C         
  495 0000022C 2801            CMP              R0, #2_01
  496 0000022E BF08 F000 
              F807             BLEQ             SW1_pressed
  497 00000234         
  498 00000234 494E            LDR              R1, =GPIO_PORTJ_ICR_R
  499 00000236 F04F 0001       MOV              R0, #2_00000001 ; PJ0 E PJ1
  500 0000023A 6008            STR              R0, [R1]    ; Limpa a interrupc
                                                            ao (ACK)
  501 0000023C         
  502 0000023C E8BD 4003       POP              {R0, R1, LR}
  503 00000240 4770            BX               LR          ; Retorna
  504 00000242         
  505 00000242         SW1_pressed                          ; Deve limpar a mem
                                                            oria de multiplicad
                                                            ores
  506 00000242 B500            PUSH             {LR}
  507 00000244 F7FF FFFE       BL               zerar_memoria
  508 00000248 F85D EB04       POP              {LR}
  509 0000024C 4770            BX               LR
  510 0000024E         
  511 0000024E         Timer2A_Handler
  512 0000024E 4952            LDR              R1, =TIMER2_ICR_R
  513 00000250 F04F 0001       MOV              R0, #1
  514 00000254 6008            STR              R0, [R1]
  515 00000256 B500            PUSH             {LR}
  516 00000258         
  517 00000258 F7FF FFFE       BL               BlinkLED
  518 0000025C         
  519 0000025C         
  520 0000025C 4849            LDR              R0, =TIMER2_CTL_R
  521 0000025E F04F 0101       MOV              R1, #1



ARM Macro Assembler    Page 19 


  522 00000262 6001            STR              R1, [R0]
  523 00000264         
  524 00000264 F85D EB04       POP              {LR}        ; retorno da interr
                                                            upção
  525 00000268 4770            BX               LR
  526 0000026A         
  527 0000026A         ; Função PortK_Output
  528 0000026A         ; Parâmetro de entrada: R0
  529 0000026A         ; Parâmetro de saída:  Não tem
  530 0000026A         PortK_Output
  531 0000026A B407            PUSH             {R0, R1, R2}
  532 0000026C         
  533 0000026C 4951            LDR              R1, =GPIO_PORTK_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  534 0000026E         ; Read-Modify-Write para escrita
  535 0000026E 680A            LDR              R2, [R1]
  536 00000270 F022 02FF       BIC              R2, #2_11111111 ; Máscara com b
                                                            its 1 nas posições 
                                                            que queremos limpar
                                                             PK7:PK0
  537 00000274 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            parâmetro de entrad
                                                            a
  538 00000278 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            K
  539 0000027A         
  540 0000027A BC07            POP              {R0, R1, R2}
  541 0000027C 4770            BX               LR          ; Retorna
  542 0000027E         
  543 0000027E         ; Função PortL_Input
  544 0000027E         ; Parâmetro de entrada: Não tem
  545 0000027E         ; Parâmetro de saída: R0 --> o valor da leitura
  546 0000027E         PortL_Input
  547 0000027E B402            PUSH             {R1}
  548 00000280 494D            LDR              R1, =GPIO_PORTL_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  549 00000282 6808            LDR              R0, [R1]    ; Lê no barramento 
                                                            de dados dos pinos
  550 00000284         
  551 00000284 BC02            POP              {R1}
  552 00000286 4770            BX               LR          ; Retorna
  553 00000288         
  554 00000288         ; Função PortM_Output
  555 00000288         ; Parâmetro de entrada: R0
  556 00000288         ; Parâmetro de saída:  Não tem
  557 00000288         PortM_Output
  558 00000288 B407            PUSH             {R0, R1, R2}
  559 0000028A         
  560 0000028A 494C            LDR              R1, =GPIO_PORTM_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  561 0000028C         ; Read-Modify-Write para escrita
  562 0000028C 680A            LDR              R2, [R1]
  563 0000028E F022 02F7       BIC              R2, #2_11110111 ; Máscara com b
                                                            its 1 nas posições 
                                                            que queremos limpar



ARM Macro Assembler    Page 20 


                                                             PM7:PM4 e PM3:PM0
  564 00000292 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            parâmetro de entrad
                                                            a
  565 00000296 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            M
  566 00000298         
  567 00000298 BC07            POP              {R0 ,R1, R2}
  568 0000029A 4770            BX               LR          ; Retorna
  569 0000029C         
  570 0000029C         ; Função PortP_Output
  571 0000029C         ; Parâmetro de entrada: R0
  572 0000029C         ; Parâmetro de saída:  Não tem
  573 0000029C         PortP_Output
  574 0000029C B407            PUSH             {R0, R1, R2}
  575 0000029E 4948            LDR              R1, =GPIO_PORTP_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  576 000002A0         ; Read-Modify-Write para escrita
  577 000002A0 680A            LDR              R2, [R1]
  578 000002A2 F022 0220       BIC              R2, #2_00100000 ; Máscara com b
                                                            its 1 nas posições 
                                                            que queremos limpar
                                                             PP5
  579 000002A6 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            parâmetro de entrad
                                                            a
  580 000002AA 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            P
  581 000002AC         
  582 000002AC BC07            POP              {R0 ,R1, R2}
  583 000002AE 4770            BX               LR          ; Retorna
  584 000002B0         
  585 000002B0         
  586 000002B0         
  587 000002B0         ; Função PortQ_Output
  588 000002B0         ; Parâmetro de entrada: R0
  589 000002B0         ; Parâmetro de saída: Não tem
  590 000002B0         PortQ_Output
  591 000002B0 B407            PUSH             {R0, R1, R2}
  592 000002B2         
  593 000002B2 4944            LDR              R1, =GPIO_PORTQ_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  594 000002B4         ; Read-Modify-Write para escrita
  595 000002B4 680A            LDR              R2, [R1]
  596 000002B6 F022 020F       BIC              R2, #2_00001111 ; Máscara com b
                                                            its 1 nas posições 
                                                            que queremos limpar
                                                             PQ3:PQ0
  597 000002BA EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            parâmetro de entrad
                                                            a
  598 000002BE 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            Q
  599 000002C0         



ARM Macro Assembler    Page 21 


  600 000002C0 BC07            POP              {R0, R1, R2}
  601 000002C2 4770            BX               LR          ; Retorna
  602 000002C4         
  603 000002C4         ; ------------------------------------------------------
                       -------------------------
  604 000002C4         
  605 000002C4                 ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  606 000002C4                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40058528 
              40060528 
              40061528 
              40062528 
              40063528 
              40065528 
              40066528 
              4005852C 
              4006052C 
              4006152C 
              4006252C 
              4006352C 
              4006552C 
              4006652C 
              40058400 
              40060400 
              40061400 
              40062400 
              40063400 
              40065400 
              40066400 
              40058420 
              40060420 
              40061420 
              40062420 
              40063420 
              40065420 
              40066420 
              4005851C 
              4006051C 
              4006151C 
              4006251C 
              4006351C 
              4006551C 
              4006651C 
              40060510 
              40062510 
              40060410 
              40060404 
              40060408 
              4006040C 
              4006041C 
              E000E104 
              E000E430 
              400FE604 
              400FEA04 
              4003200C 



ARM Macro Assembler    Page 22 


              40032000 
              40032004 
              40032028 
              40032038 
              40032024 
              40032018 
              E000E414 
              E000E100 
              400583FC 
              400603FC 
              40060414 
              400613FC 
              400623FC 
              400633FC 
              400653FC 
              400663FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\gpio.d -o.\objects\gpio.o -IC:\Users\bruno\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 139 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 00000022

Symbol: EsperaGPIO
   Definitions
      At line 179 in file gpio.s
   Uses
      At line 188 in file gpio.s
Comment: EsperaGPIO used once
EsperaTimer 00000190

Symbol: EsperaTimer
   Definitions
      At line 385 in file gpio.s
   Uses
      At line 388 in file gpio.s
Comment: EsperaTimer used once
GPIOPortJ_Handler 00000226

Symbol: GPIOPortJ_Handler
   Definitions
      At line 490 in file gpio.s
   Uses
      At line 150 in file gpio.s
Comment: GPIOPortJ_Handler used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 163 in file gpio.s
   Uses
      At line 142 in file gpio.s
Comment: GPIO_Init used once
PortA_Output 00000208

Symbol: PortA_Output
   Definitions
      At line 462 in file gpio.s
   Uses
      At line 143 in file gpio.s
Comment: PortA_Output used once
PortJ_Input 0000021C

Symbol: PortJ_Input
   Definitions
      At line 478 in file gpio.s
   Uses
      At line 144 in file gpio.s
Comment: PortJ_Input used once
PortK_Output 0000026A

Symbol: PortK_Output



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 530 in file gpio.s
   Uses
      At line 145 in file gpio.s
Comment: PortK_Output used once
PortL_Input 0000027E

Symbol: PortL_Input
   Definitions
      At line 546 in file gpio.s
   Uses
      At line 146 in file gpio.s
Comment: PortL_Input used once
PortM_Output 00000288

Symbol: PortM_Output
   Definitions
      At line 557 in file gpio.s
   Uses
      At line 147 in file gpio.s
Comment: PortM_Output used once
PortP_Output 0000029C

Symbol: PortP_Output
   Definitions
      At line 573 in file gpio.s
   Uses
      At line 148 in file gpio.s
Comment: PortP_Output used once
PortQ_Output 000002B0

Symbol: PortQ_Output
   Definitions
      At line 590 in file gpio.s
   Uses
      At line 149 in file gpio.s
Comment: PortQ_Output used once
SW1_pressed 00000242

Symbol: SW1_pressed
   Definitions
      At line 505 in file gpio.s
   Uses
      At line 496 in file gpio.s
Comment: SW1_pressed used once
Timer2A_Handler 0000024E

Symbol: Timer2A_Handler
   Definitions
      At line 511 in file gpio.s
   Uses
      At line 151 in file gpio.s
Comment: Timer2A_Handler used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GET_PASSWORD 00000000

Symbol: GET_PASSWORD
   Definitions
      At line 7 in file gpio.s
   Uses
      None
Comment: GET_PASSWORD unused
GPIO_PORTA 00000001

Symbol: GPIO_PORTA
   Definitions
      At line 31 in file gpio.s
   Uses
      At line 169 in file gpio.s
      At line 180 in file gpio.s

GPIO_PORTA_AHB_AFSEL_R 40058420

Symbol: GPIO_PORTA_AHB_AFSEL_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 270 in file gpio.s
Comment: GPIO_PORTA_AHB_AFSEL_R used once
GPIO_PORTA_AHB_AMSEL_R 40058528

Symbol: GPIO_PORTA_AHB_AMSEL_R
   Definitions
      At line 23 in file gpio.s
   Uses
      At line 192 in file gpio.s
Comment: GPIO_PORTA_AHB_AMSEL_R used once
GPIO_PORTA_AHB_CR_R 40058524

Symbol: GPIO_PORTA_AHB_CR_R
   Definitions
      At line 22 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_CR_R unused
GPIO_PORTA_AHB_DATA_BITS_R 40058000

Symbol: GPIO_PORTA_AHB_DATA_BITS_R
   Definitions
      At line 30 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_DATA_BITS_R unused
GPIO_PORTA_AHB_DATA_R 400583FC

Symbol: GPIO_PORTA_AHB_DATA_R
   Definitions
      At line 29 in file gpio.s
   Uses
      At line 465 in file gpio.s
Comment: GPIO_PORTA_AHB_DATA_R used once
GPIO_PORTA_AHB_DEN_R 4005851C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTA_AHB_DEN_R
   Definitions
      At line 27 in file gpio.s
   Uses
      At line 293 in file gpio.s
Comment: GPIO_PORTA_AHB_DEN_R used once
GPIO_PORTA_AHB_DIR_R 40058400

Symbol: GPIO_PORTA_AHB_DIR_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 237 in file gpio.s
Comment: GPIO_PORTA_AHB_DIR_R used once
GPIO_PORTA_AHB_LOCK_R 40058520

Symbol: GPIO_PORTA_AHB_LOCK_R
   Definitions
      At line 21 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_LOCK_R unused
GPIO_PORTA_AHB_PCTL_R 4005852C

Symbol: GPIO_PORTA_AHB_PCTL_R
   Definitions
      At line 24 in file gpio.s
   Uses
      At line 215 in file gpio.s
Comment: GPIO_PORTA_AHB_PCTL_R used once
GPIO_PORTA_AHB_PUR_R 40058510

Symbol: GPIO_PORTA_AHB_PUR_R
   Definitions
      At line 28 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_PUR_R unused
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 44 in file gpio.s
   Uses
      At line 170 in file gpio.s
      At line 181 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 39 in file gpio.s
   Uses
      At line 273 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 36 in file gpio.s
   Uses
      At line 195 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 35 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_BITS_R 40060000

Symbol: GPIO_PORTJ_AHB_DATA_BITS_R
   Definitions
      At line 43 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_BITS_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 42 in file gpio.s
   Uses
      At line 481 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 40 in file gpio.s
   Uses
      At line 298 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 242 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 34 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 218 in file gpio.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 329 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTJ_IBE_R 40060408

Symbol: GPIO_PORTJ_IBE_R
   Definitions
      At line 113 in file gpio.s
   Uses
      At line 347 in file gpio.s
Comment: GPIO_PORTJ_IBE_R used once
GPIO_PORTJ_ICR_R 4006041C

Symbol: GPIO_PORTJ_ICR_R
   Definitions
      At line 116 in file gpio.s
   Uses
      At line 354 in file gpio.s
      At line 498 in file gpio.s

GPIO_PORTJ_IEV_R 4006040C

Symbol: GPIO_PORTJ_IEV_R
   Definitions
      At line 114 in file gpio.s
   Uses
      At line 351 in file gpio.s
Comment: GPIO_PORTJ_IEV_R used once
GPIO_PORTJ_IM_R 40060410

Symbol: GPIO_PORTJ_IM_R
   Definitions
      At line 115 in file gpio.s
   Uses
      At line 338 in file gpio.s
      At line 358 in file gpio.s

GPIO_PORTJ_IS_R 40060404

Symbol: GPIO_PORTJ_IS_R
   Definitions
      At line 112 in file gpio.s
   Uses
      At line 343 in file gpio.s
Comment: GPIO_PORTJ_IS_R used once
GPIO_PORTJ_RIS_R 40060414

Symbol: GPIO_PORTJ_RIS_R
   Definitions
      At line 119 in file gpio.s
   Uses
      At line 492 in file gpio.s
Comment: GPIO_PORTJ_RIS_R used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTK 00000200

Symbol: GPIO_PORTK
   Definitions
      At line 57 in file gpio.s
   Uses
      At line 171 in file gpio.s
      At line 182 in file gpio.s

GPIO_PORTK_AFSEL_R 40061420

Symbol: GPIO_PORTK_AFSEL_R
   Definitions
      At line 52 in file gpio.s
   Uses
      At line 276 in file gpio.s
Comment: GPIO_PORTK_AFSEL_R used once
GPIO_PORTK_AMSEL_R 40061528

Symbol: GPIO_PORTK_AMSEL_R
   Definitions
      At line 49 in file gpio.s
   Uses
      At line 198 in file gpio.s
Comment: GPIO_PORTK_AMSEL_R used once
GPIO_PORTK_CR_R 40061524

Symbol: GPIO_PORTK_CR_R
   Definitions
      At line 48 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_CR_R unused
GPIO_PORTK_DATA_BITS_R 40061000

Symbol: GPIO_PORTK_DATA_BITS_R
   Definitions
      At line 56 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_DATA_BITS_R unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 55 in file gpio.s
   Uses
      At line 533 in file gpio.s
Comment: GPIO_PORTK_DATA_R used once
GPIO_PORTK_DEN_R 4006151C

Symbol: GPIO_PORTK_DEN_R
   Definitions
      At line 53 in file gpio.s
   Uses
      At line 303 in file gpio.s
Comment: GPIO_PORTK_DEN_R used once
GPIO_PORTK_DIR_R 40061400




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTK_DIR_R
   Definitions
      At line 51 in file gpio.s
   Uses
      At line 246 in file gpio.s
Comment: GPIO_PORTK_DIR_R used once
GPIO_PORTK_LOCK_R 40061520

Symbol: GPIO_PORTK_LOCK_R
   Definitions
      At line 47 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_LOCK_R unused
GPIO_PORTK_PCTL_R 4006152C

Symbol: GPIO_PORTK_PCTL_R
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 221 in file gpio.s
Comment: GPIO_PORTK_PCTL_R used once
GPIO_PORTK_PUR_R 40061510

Symbol: GPIO_PORTK_PUR_R
   Definitions
      At line 54 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_PUR_R unused
GPIO_PORTL 00000400

Symbol: GPIO_PORTL
   Definitions
      At line 69 in file gpio.s
   Uses
      At line 172 in file gpio.s
      At line 183 in file gpio.s

GPIO_PORTL_AFSEL_R 40062420

Symbol: GPIO_PORTL_AFSEL_R
   Definitions
      At line 65 in file gpio.s
   Uses
      At line 279 in file gpio.s
Comment: GPIO_PORTL_AFSEL_R used once
GPIO_PORTL_AMSEL_R 40062528

Symbol: GPIO_PORTL_AMSEL_R
   Definitions
      At line 62 in file gpio.s
   Uses
      At line 201 in file gpio.s
Comment: GPIO_PORTL_AMSEL_R used once
GPIO_PORTL_CR_R 40062524

Symbol: GPIO_PORTL_CR_R
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 61 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_CR_R unused
GPIO_PORTL_DATA_R 400623FC

Symbol: GPIO_PORTL_DATA_R
   Definitions
      At line 68 in file gpio.s
   Uses
      At line 548 in file gpio.s
Comment: GPIO_PORTL_DATA_R used once
GPIO_PORTL_DEN_R 4006251C

Symbol: GPIO_PORTL_DEN_R
   Definitions
      At line 66 in file gpio.s
   Uses
      At line 308 in file gpio.s
Comment: GPIO_PORTL_DEN_R used once
GPIO_PORTL_DIR_R 40062400

Symbol: GPIO_PORTL_DIR_R
   Definitions
      At line 64 in file gpio.s
   Uses
      At line 250 in file gpio.s
Comment: GPIO_PORTL_DIR_R used once
GPIO_PORTL_LOCK_R 40062520

Symbol: GPIO_PORTL_LOCK_R
   Definitions
      At line 60 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_LOCK_R unused
GPIO_PORTL_PCTL_R 4006252C

Symbol: GPIO_PORTL_PCTL_R
   Definitions
      At line 63 in file gpio.s
   Uses
      At line 224 in file gpio.s
Comment: GPIO_PORTL_PCTL_R used once
GPIO_PORTL_PUR_R 40062510

Symbol: GPIO_PORTL_PUR_R
   Definitions
      At line 67 in file gpio.s
   Uses
      At line 333 in file gpio.s
Comment: GPIO_PORTL_PUR_R used once
GPIO_PORTM 00000800

Symbol: GPIO_PORTM
   Definitions
      At line 81 in file gpio.s
   Uses
      At line 173 in file gpio.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 184 in file gpio.s

GPIO_PORTM_AFSEL_R 40063420

Symbol: GPIO_PORTM_AFSEL_R
   Definitions
      At line 77 in file gpio.s
   Uses
      At line 282 in file gpio.s
Comment: GPIO_PORTM_AFSEL_R used once
GPIO_PORTM_AMSEL_R 40063528

Symbol: GPIO_PORTM_AMSEL_R
   Definitions
      At line 74 in file gpio.s
   Uses
      At line 204 in file gpio.s
Comment: GPIO_PORTM_AMSEL_R used once
GPIO_PORTM_CR_R 40063524

Symbol: GPIO_PORTM_CR_R
   Definitions
      At line 73 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_CR_R unused
GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 80 in file gpio.s
   Uses
      At line 560 in file gpio.s
Comment: GPIO_PORTM_DATA_R used once
GPIO_PORTM_DEN_R 4006351C

Symbol: GPIO_PORTM_DEN_R
   Definitions
      At line 78 in file gpio.s
   Uses
      At line 313 in file gpio.s
Comment: GPIO_PORTM_DEN_R used once
GPIO_PORTM_DIR_R 40063400

Symbol: GPIO_PORTM_DIR_R
   Definitions
      At line 76 in file gpio.s
   Uses
      At line 254 in file gpio.s
Comment: GPIO_PORTM_DIR_R used once
GPIO_PORTM_LOCK_R 40063520

Symbol: GPIO_PORTM_LOCK_R
   Definitions
      At line 72 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_LOCK_R unused
GPIO_PORTM_PCTL_R 4006352C



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTM_PCTL_R
   Definitions
      At line 75 in file gpio.s
   Uses
      At line 227 in file gpio.s
Comment: GPIO_PORTM_PCTL_R used once
GPIO_PORTM_PUR_R 40063510

Symbol: GPIO_PORTM_PUR_R
   Definitions
      At line 79 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_PUR_R unused
GPIO_PORTP 00002000

Symbol: GPIO_PORTP
   Definitions
      At line 94 in file gpio.s
   Uses
      At line 174 in file gpio.s
      At line 185 in file gpio.s

GPIO_PORTP_AFSEL_R 40065420

Symbol: GPIO_PORTP_AFSEL_R
   Definitions
      At line 89 in file gpio.s
   Uses
      At line 285 in file gpio.s
Comment: GPIO_PORTP_AFSEL_R used once
GPIO_PORTP_AMSEL_R 40065528

Symbol: GPIO_PORTP_AMSEL_R
   Definitions
      At line 86 in file gpio.s
   Uses
      At line 207 in file gpio.s
Comment: GPIO_PORTP_AMSEL_R used once
GPIO_PORTP_CR_R 40065524

Symbol: GPIO_PORTP_CR_R
   Definitions
      At line 85 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_CR_R unused
GPIO_PORTP_DATA_BITS_R 40065000

Symbol: GPIO_PORTP_DATA_BITS_R
   Definitions
      At line 93 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_DATA_BITS_R unused
GPIO_PORTP_DATA_R 400653FC

Symbol: GPIO_PORTP_DATA_R



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 92 in file gpio.s
   Uses
      At line 575 in file gpio.s
Comment: GPIO_PORTP_DATA_R used once
GPIO_PORTP_DEN_R 4006551C

Symbol: GPIO_PORTP_DEN_R
   Definitions
      At line 90 in file gpio.s
   Uses
      At line 318 in file gpio.s
Comment: GPIO_PORTP_DEN_R used once
GPIO_PORTP_DIR_R 40065400

Symbol: GPIO_PORTP_DIR_R
   Definitions
      At line 88 in file gpio.s
   Uses
      At line 258 in file gpio.s
Comment: GPIO_PORTP_DIR_R used once
GPIO_PORTP_LOCK_R 40065520

Symbol: GPIO_PORTP_LOCK_R
   Definitions
      At line 84 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_LOCK_R unused
GPIO_PORTP_PCTL_R 4006552C

Symbol: GPIO_PORTP_PCTL_R
   Definitions
      At line 87 in file gpio.s
   Uses
      At line 230 in file gpio.s
Comment: GPIO_PORTP_PCTL_R used once
GPIO_PORTP_PUR_R 40065510

Symbol: GPIO_PORTP_PUR_R
   Definitions
      At line 91 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_PUR_R unused
GPIO_PORTQ 00004000

Symbol: GPIO_PORTQ
   Definitions
      At line 107 in file gpio.s
   Uses
      At line 175 in file gpio.s
      At line 186 in file gpio.s

GPIO_PORTQ_AFSEL_R 40066420

Symbol: GPIO_PORTQ_AFSEL_R
   Definitions
      At line 102 in file gpio.s



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 288 in file gpio.s
Comment: GPIO_PORTQ_AFSEL_R used once
GPIO_PORTQ_AMSEL_R 40066528

Symbol: GPIO_PORTQ_AMSEL_R
   Definitions
      At line 99 in file gpio.s
   Uses
      At line 210 in file gpio.s
Comment: GPIO_PORTQ_AMSEL_R used once
GPIO_PORTQ_CR_R 40066524

Symbol: GPIO_PORTQ_CR_R
   Definitions
      At line 98 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_CR_R unused
GPIO_PORTQ_DATA_BITS_R 40066000

Symbol: GPIO_PORTQ_DATA_BITS_R
   Definitions
      At line 106 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_DATA_BITS_R unused
GPIO_PORTQ_DATA_R 400663FC

Symbol: GPIO_PORTQ_DATA_R
   Definitions
      At line 105 in file gpio.s
   Uses
      At line 593 in file gpio.s
Comment: GPIO_PORTQ_DATA_R used once
GPIO_PORTQ_DEN_R 4006651C

Symbol: GPIO_PORTQ_DEN_R
   Definitions
      At line 103 in file gpio.s
   Uses
      At line 323 in file gpio.s
Comment: GPIO_PORTQ_DEN_R used once
GPIO_PORTQ_DIR_R 40066400

Symbol: GPIO_PORTQ_DIR_R
   Definitions
      At line 101 in file gpio.s
   Uses
      At line 262 in file gpio.s
Comment: GPIO_PORTQ_DIR_R used once
GPIO_PORTQ_LOCK_R 40066520

Symbol: GPIO_PORTQ_LOCK_R
   Definitions
      At line 97 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_LOCK_R unused



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTQ_PCTL_R 4006652C

Symbol: GPIO_PORTQ_PCTL_R
   Definitions
      At line 100 in file gpio.s
   Uses
      At line 233 in file gpio.s
Comment: GPIO_PORTQ_PCTL_R used once
GPIO_PORTQ_PUR_R 40066510

Symbol: GPIO_PORTQ_PUR_R
   Definitions
      At line 104 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_PUR_R unused
LOCKED 00000006

Symbol: LOCKED
   Definitions
      At line 9 in file gpio.s
   Uses
      None
Comment: LOCKED unused
LOCKED_MASTER 00000007

Symbol: LOCKED_MASTER
   Definitions
      At line 10 in file gpio.s
   Uses
      None
Comment: LOCKED_MASTER unused
NVIC_EN0_R E000E100

Symbol: NVIC_EN0_R
   Definitions
      At line 133 in file gpio.s
   Uses
      At line 449 in file gpio.s
Comment: NVIC_EN0_R used once
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions
      At line 118 in file gpio.s
   Uses
      At line 362 in file gpio.s
Comment: NVIC_EN1_R used once
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 117 in file gpio.s
   Uses
      At line 367 in file gpio.s
Comment: NVIC_PRI12_R used once
NVIC_PRI5_R E000E414

Symbol: NVIC_PRI5_R



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 132 in file gpio.s
   Uses
      At line 443 in file gpio.s
Comment: NVIC_PRI5_R used once
SET_PASSWORD 00000001

Symbol: SET_PASSWORD
   Definitions
      At line 8 in file gpio.s
   Uses
      None
Comment: SET_PASSWORD unused
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 16 in file gpio.s
   Uses
      At line 178 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_PRTIMER_R 400FEA04

Symbol: SYSCTL_PRTIMER_R
   Definitions
      At line 124 in file gpio.s
   Uses
      At line 384 in file gpio.s
Comment: SYSCTL_PRTIMER_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 15 in file gpio.s
   Uses
      At line 168 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
SYSCTL_RCGCTIMER_R 400FE604

Symbol: SYSCTL_RCGCTIMER_R
   Definitions
      At line 123 in file gpio.s
   Uses
      At line 378 in file gpio.s
Comment: SYSCTL_RCGCTIMER_R used once
TIMER2_CFG_R 40032000

Symbol: TIMER2_CFG_R
   Definitions
      At line 126 in file gpio.s
   Uses
      At line 398 in file gpio.s
Comment: TIMER2_CFG_R used once
TIMER2_CTL_R 4003200C

Symbol: TIMER2_CTL_R
   Definitions
      At line 125 in file gpio.s
   Uses



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

      At line 391 in file gpio.s
      At line 452 in file gpio.s
      At line 520 in file gpio.s

TIMER2_ICR_R 40032024

Symbol: TIMER2_ICR_R
   Definitions
      At line 130 in file gpio.s
   Uses
      At line 427 in file gpio.s
      At line 512 in file gpio.s

TIMER2_IMR_R 40032018

Symbol: TIMER2_IMR_R
   Definitions
      At line 131 in file gpio.s
   Uses
      At line 434 in file gpio.s
Comment: TIMER2_IMR_R used once
TIMER2_TAILR_R 40032028

Symbol: TIMER2_TAILR_R
   Definitions
      At line 128 in file gpio.s
   Uses
      At line 413 in file gpio.s
Comment: TIMER2_TAILR_R used once
TIMER2_TAMR_R 40032004

Symbol: TIMER2_TAMR_R
   Definitions
      At line 127 in file gpio.s
   Uses
      At line 405 in file gpio.s
Comment: TIMER2_TAMR_R used once
TIMER2_TAPR_R 40032038

Symbol: TIMER2_TAPR_R
   Definitions
      At line 129 in file gpio.s
   Uses
      At line 420 in file gpio.s
Comment: TIMER2_TAPR_R used once
tranP 00000020

Symbol: tranP
   Definitions
      At line 135 in file gpio.s
   Uses
      None
Comment: tranP unused
101 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BlinkLED 00000000

Symbol: BlinkLED
   Definitions
      At line 157 in file gpio.s
   Uses
      At line 517 in file gpio.s
Comment: BlinkLED used once
EnableInterrupts 00000000

Symbol: EnableInterrupts
   Definitions
      At line 155 in file gpio.s
   Uses
      At line 373 in file gpio.s
Comment: EnableInterrupts used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 156 in file gpio.s
   Uses
      None
Comment: SysTick_Wait1ms unused
zerar_memoria 00000000

Symbol: zerar_memoria
   Definitions
      At line 154 in file gpio.s
   Uses
      At line 507 in file gpio.s
Comment: zerar_memoria used once
4 symbols
455 symbols in table
