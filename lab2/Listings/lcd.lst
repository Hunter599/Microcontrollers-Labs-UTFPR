


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ; ------------------------------------------------------
                       -------------------------
    3 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    4 00000000         ; ------------------------------------------------------
                       -------------------------
    5 00000000         
    6 00000000         ; Declarações EQU - Defines
    7 00000000         ;<NOME>         EQU <VALOR>
    8 00000000         ; ========================
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         ; Área de Dados - Declarações de variáveis
   11 00000000                 AREA             DATA, ALIGN=2
   12 00000000         ; Se alguma variável for chamada em outro arquivo
   13 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   14 00000000         ; partir de outro arquivo
   15 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   16 00000000         ; de <tam> bytes a partir da primeira 
   17 00000000         ; posição da RAM  
   18 00000000         
   19 00000000         ; ------------------------------------------------------
                       -------------------------
   20 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   21 00000000         ;                  código
   22 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   23 00000000         
   24 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo
   25 00000000         ; EXPORT <func>    ; Permite chamar a função a partir de
                        outro arquivo
   26 00000000                 EXPORT           LCD_Init
   27 00000000                 EXPORT           LCD_Line2
   28 00000000                 EXPORT           LCD_PrintString
   29 00000000                 EXPORT           LCD_Reset
   30 00000000                 EXPORT           print_tabuada
   31 00000000                 EXPORT           print_numero
   32 00000000         
   33 00000000         ; Se chamar alguma função externa 
   34 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma função de outro
   35 00000000                 IMPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
   36 00000000                 IMPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
   37 00000000                 IMPORT           SysTick_Wait1ms ; Permite chama
                                                            r SysTick_Wait1ms d
                                                            e outro arquivo
   38 00000000         ; ------------------------------------------------------
                       -------------------------
   39 00000000         ; Função LCD_Init
   40 00000000         ; Inicializa o LCD



ARM Macro Assembler    Page 2 


   41 00000000         ; Parâmetro de entrada: Não tem
   42 00000000         ; Parâmetro de saída: Não tem
   43 00000000         LCD_Init
   44 00000000 B500            PUSH             {LR}
   45 00000002         
   46 00000002 F04F 0338       MOV              R3, #0x38   ; Inicializar no mo
                                                            do 2 linhas/caracte
                                                            r matriz 5x7
   47 00000006 F000 F80F       BL               LCD_Instruction
   48 0000000A         
   49 0000000A F04F 0306       MOV              R3, #0x06   ; Cursor com autoin
                                                            cremento para direi
                                                            ta
   50 0000000E F000 F80B       BL               LCD_Instruction
   51 00000012         
   52 00000012 F04F 030E       MOV              R3, #0x0E   ; Configurar o curs
                                                            or (habilitar o dis
                                                            play + cursor + não
                                                            -pisca)
   53 00000016 F000 F807       BL               LCD_Instruction
   54 0000001A         
   55 0000001A F04F 0301       MOV              R3, #0x01   ; Resetar: Limpar o
                                                             display e levar o 
                                                            cursor para o home
   56 0000001E F000 F803       BL               LCD_Instruction
   57 00000022         
   58 00000022 F85D EB04       POP              {LR}
   59 00000026 4770            BX               LR
   60 00000028         
   61 00000028         ; Função LCD_Instruction
   62 00000028         ; Recebe uma instrução e a executa
   63 00000028         ; Parâmetro de entrada: R3
   64 00000028         ; Parâmetro de saída: Não tem
   65 00000028         LCD_Instruction
   66 00000028 B500            PUSH             {LR}
   67 0000002A         
   68 0000002A F04F 0004       MOV              R0, #2_00000100 ; Ativa o modo 
                                                            de instrução (EN=1,
                                                             RW=0, RS=0)
   69 0000002E F7FF FFFE       BL               PortM_Output
   70 00000032         
   71 00000032 4618            MOV              R0, R3      ; Escreve no barram
                                                            ento de dados
   72 00000034 F7FF FFFE       BL               PortK_Output
   73 00000038         
   74 00000038 F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
   75 0000003C F7FF FFFE       BL               SysTick_Wait1ms
   76 00000040         
   77 00000040 F04F 0000       MOV              R0, #2_00000000 ; Desativa o mo
                                                            do de instrução (EN
                                                            =0, RW=0, RS=0)
   78 00000044 F7FF FFFE       BL               PortM_Output
   79 00000048         
   80 00000048 F85D EB04       POP              {LR}
   81 0000004C 4770            BX               LR



ARM Macro Assembler    Page 3 


   82 0000004E         
   83 0000004E         ; Função LCD_Data
   84 0000004E         ; Recebe um dado e o escreve
   85 0000004E         ; Parâmetro de entrada: R3
   86 0000004E         ; Parâmetro de saída: Não tem
   87 0000004E         LCD_Data
   88 0000004E B501            PUSH             {LR, R0}
   89 00000050         
   90 00000050 F04F 0005       MOV              R0, #2_00000101 ; Ativa o modo 
                                                            de dados (EN=1, RW=
                                                            0, RS=1)
   91 00000054 F7FF FFFE       BL               PortM_Output
   92 00000058         
   93 00000058 4618            MOV              R0, R3      ; Escreve no barram
                                                            ento de dados
   94 0000005A F7FF FFFE       BL               PortK_Output
   95 0000005E         
   96 0000005E F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
   97 00000062 F7FF FFFE       BL               SysTick_Wait1ms
   98 00000066         
   99 00000066 F04F 0000       MOV              R0, #2_00000000 ; Desativa o mo
                                                            do de dados (EN=0, 
                                                            RW=0, RS=0)
  100 0000006A F7FF FFFE       BL               PortM_Output
  101 0000006E         
  102 0000006E E8BD 4001       POP              {LR, R0}
  103 00000072 4770            BX               LR
  104 00000074         
  105 00000074         ; Função LCD_Line2
  106 00000074         ; Prepara a escrita na segunda linha do LCD
  107 00000074         ; Parâmetro de entrada: Não tem
  108 00000074         ; Parâmetro de saída: Não tem
  109 00000074         LCD_Line2
  110 00000074 B509            PUSH             {LR, R0, R3}
  111 00000076         
  112 00000076 F04F 03C0       MOV              R3, #0xC0   ; Endereço da prime
                                                            ira posição - Segun
                                                            da Linha
  113 0000007A F7FF FFD5       BL               LCD_Instruction
  114 0000007E         
  115 0000007E F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
  116 00000082 F7FF FFFE       BL               SysTick_Wait1ms
  117 00000086         
  118 00000086 E8BD 4009       POP              {LR, R0, R3}
  119 0000008A 4770            BX               LR
  120 0000008C         
  121 0000008C         ; Funções LCD_PrintString, LCD_PrintChar e LCD_EndOfStri
                       ng
  122 0000008C         ; Imprimem uma string no LCD através de um loop
  123 0000008C         ; Parâmetro de entrada: R4 -> A string a ser escrita
  124 0000008C         ; Parâmetro de saída: Não tem



ARM Macro Assembler    Page 4 


  125 0000008C         LCD_PrintString
  126 0000008C B519            PUSH             {LR, R0, R3, R4}
  127 0000008E         LCD_PrintChar
  128 0000008E F814 3B01       LDRB             R3, [R4], #1 ; Lê um caractere 
                                                            da string e desloca
                                                             para o próximo
  129 00000092         
  130 00000092 2B00            CMP              R3, #0      ; Verifica se chego
                                                            u no final da strin
                                                            g
  131 00000094 D002            BEQ              LCD_EndOfString
  132 00000096         
  133 00000096 F7FF FFDA       BL               LCD_Data    ; Escreve o caracte
                                                            re
  134 0000009A         
  135 0000009A E7F8            B                LCD_PrintChar ; Continua iteran
                                                            do sobre a string a
                                                            té chegar no fim
  136 0000009C         LCD_EndOfString
  137 0000009C F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
  138 000000A0 F7FF FFFE       BL               SysTick_Wait1ms
  139 000000A4         
  140 000000A4 E8BD 4019       POP              {LR, R0, R3, R4} ; A string foi
                                                             escrita. Retorna
  141 000000A8 4770            BX               LR
  142 000000AA         
  143 000000AA         ; Função LCD_Reset
  144 000000AA         ; Limpa o display e leva o cursor para o home
  145 000000AA         ; Parâmetro de entrada: Não tem
  146 000000AA         ; Parâmetro de saída: Não tem
  147 000000AA         LCD_Reset
  148 000000AA B509            PUSH             {LR, R0, R3}
  149 000000AC         
  150 000000AC F04F 0301       MOV              R3, #0x01   ; Resetar: Limpar o
                                                             display e levar o 
                                                            cursor para o home
  151 000000B0 F7FF FFBA       BL               LCD_Instruction
  152 000000B4         
  153 000000B4 F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
  154 000000B8 F7FF FFFE       BL               SysTick_Wait1ms
  155 000000BC         
  156 000000BC E8BD 4009       POP              {LR, R0, R3}
  157 000000C0 4770            BX               LR
  158 000000C2         
  159 000000C2         
  160 000000C2         ;Input: R0 = N, R1 = M
  161 000000C2         ;Output: -
  162 000000C2         print_tabuada
  163 000000C2 B504            PUSH             {LR, R2}
  164 000000C4 F7FF FFFE       BL               LCD_Reset
  165 000000C8 FB00 F201       MUL              R2, R0, R1



ARM Macro Assembler    Page 5 


  166 000000CC         ;ADD R2, R2, #0
  167 000000CC 4C33            LDR              R4, =TABUADA
  168 000000CE F7FF FFFE       BL               LCD_PrintString
  169 000000D2         
  170 000000D2 F7FF FFFE       BL               print_numero
  171 000000D6 F7FF FFFE       BL               LCD_Line2
  172 000000DA         
  173 000000DA F7FF FFFE       BL               print_numero
  174 000000DE         
  175 000000DE 4C30            LDR              R4,=X
  176 000000E0 F7FF FFFE       BL               LCD_PrintString
  177 000000E4         
  178 000000E4 4608            MOV              R0, R1
  179 000000E6 F7FF FFFE       BL               print_numero
  180 000000EA         
  181 000000EA 4C2E            LDR              R4,=EQUAL
  182 000000EC F7FF FFFE       BL               LCD_PrintString
  183 000000F0         
  184 000000F0 4610            MOV              R0, R2
  185 000000F2 F7FF FFFE       BL               print_numero
  186 000000F6         
  187 000000F6 E8BD 4004       POP{LR,          R2}
  188 000000FA 4770            BX               LR
  189 000000FC         
  190 000000FC         ;Input: R0
  191 000000FC         ;Output: -
  192 000000FC         print_numero
  193 000000FC B57F            PUSH             {LR, R0, R1, R2, R3, R4, R5, R6
} 
                                                            ; Salva registrador
                                                            es críticos
  194 000000FE 4601            MOV              R1, R0      ; R1 recebe o númer
                                                            o original
  195 00000100 466D            MOV              R5, SP      ; R5 será usado com
                                                            o pilha auxiliar pa
                                                            ra armazenar os díg
                                                            itos
  196 00000102 F04F 060A       MOV              R6, #10     ; Divisor base 10
  197 00000106         
  198 00000106 2900            CMP              R1, #0      ; Verifica se o núm
                                                            ero é zero
  199 00000108 D00A            BEQ              handle_zero ; Tratamento especi
                                                            al para zero
  200 0000010A         
  201 0000010A         store_digits
  202 0000010A FB91 F0F6       SDIV             R0, R1, R6  ; R0 = R1 / 10 (par
                                                            te inteira)
  203 0000010E FB00 F206       MUL              R2, R0, R6  ; R2 = R0 * 10 (rec
                                                            alcula a parte inte
                                                            ira)
  204 00000112 EBA1 0302       SUB              R3, R1, R2  ; R3 = R1 % 10 (res
                                                            to da divisão, o dí
                                                            gito atual)
  205 00000116         
  206 00000116 B408            PUSH             {R3}        ; Empilha o dígito 
                                                            atual
  207 00000118 4601            MOV              R1, R0      ; Atualiza R1 com a
                                                             parte inteira
  208 0000011A 2900            CMP              R1, #0      ; Verifica se o núm



ARM Macro Assembler    Page 6 


                                                            ero foi reduzido a 
                                                            0
  209 0000011C D1F5            BNE              store_digits ; Continua o laço 
                                                            se ainda há dígitos
                                                            
  210 0000011E         
  211 0000011E E003            B                print_digits ; Vai para a impre
                                                            ssão dos dígitos
  212 00000120         
  213 00000120         handle_zero
  214 00000120 F04F 0300       MOV              R3, #0      ; Coloca 0 em R3
  215 00000124 B408            PUSH             {R3}        ; Empilha o dígito 
                                                            0
  216 00000126 E7FF            B                print_digits ; Vai para a impre
                                                            ssão dos dígitos
  217 00000128         
  218 00000128         print_digits
  219 00000128 45AD            CMP              SP, R5      ; Verifica se todos
                                                             os dígitos foram d
                                                            esempilhados
  220 0000012A D022            BEQ              print_done  ; Sai se a pilha es
                                                            tá vazia
  221 0000012C         
  222 0000012C BC08            POP              {R3}        ; Desempilha o próx
                                                            imo dígito
  223 0000012E 4C1E            LDR              R4, =DIGIT_9_STR ; Inicializa c
                                                            om "9" como padrão
  224 00000130 2B00            CMP              R3, #0
  225 00000132 BF08 4C1D       LDREQ            R4, =DIGIT_0_STR
  226 00000136 2B01            CMP              R3, #1
  227 00000138 BF08 4C1D       LDREQ            R4, =DIGIT_1_STR
  228 0000013C 2B02            CMP              R3, #2
  229 0000013E BF08 4C1C       LDREQ            R4, =DIGIT_2_STR
  230 00000142 2B03            CMP              R3, #3
  231 00000144 BF08 4C1C       LDREQ            R4, =DIGIT_3_STR
  232 00000148 2B04            CMP              R3, #4
  233 0000014A BF08 4C1B       LDREQ            R4, =DIGIT_4_STR
  234 0000014E 2B05            CMP              R3, #5
  235 00000150 BF08 4C1B       LDREQ            R4, =DIGIT_5_STR
  236 00000154 2B06            CMP              R3, #6
  237 00000156 BF08 4C1A       LDREQ            R4, =DIGIT_6_STR
  238 0000015A 2B07            CMP              R3, #7
  239 0000015C BF08 4C1A       LDREQ            R4, =DIGIT_7_STR
  240 00000160 2B08            CMP              R3, #8
  241 00000162 BF08 4C19       LDREQ            R4, =DIGIT_8_STR
  242 00000166 2B09            CMP              R3, #9
  243 00000168 BF08 4C0F       LDREQ            R4, =DIGIT_9_STR
  244 0000016C         
  245 0000016C F7FF FFFE       BL               LCD_PrintString ; Imprime o díg
                                                            ito correspondente
  246 00000170 E7DA            B                print_digits ; Continua o desem
                                                            pilhamento
  247 00000172         
  248 00000172         print_done
  249 00000172 E8BD 407F       POP              {LR, R0, R1, R2, R3, R4, R5, R6
} 
                                                            ; Restaura registra
                                                            dores
  250 00000176 4770            BX               LR          ; Retorna



ARM Macro Assembler    Page 7 


  251 00000178         
  252 00000178         ; Definição dos textos do LCD
  253 00000178 30 00   DIGIT_0_STR
                               DCB              "0", 0
  254 0000017A 31 00   DIGIT_1_STR
                               DCB              "1", 0
  255 0000017C 32 00   DIGIT_2_STR
                               DCB              "2", 0
  256 0000017E 33 00   DIGIT_3_STR
                               DCB              "3", 0
  257 00000180 34 00   DIGIT_4_STR
                               DCB              "4", 0
  258 00000182 35 00   DIGIT_5_STR
                               DCB              "5", 0
  259 00000184 36 00   DIGIT_6_STR
                               DCB              "6", 0
  260 00000186 37 00   DIGIT_7_STR
                               DCB              "7", 0
  261 00000188 38 00   DIGIT_8_STR
                               DCB              "8", 0
  262 0000018A 39 00   DIGIT_9_STR
                               DCB              "9", 0
  263 0000018C 54 61 62 
              75 61 64 
              61 20 64 
              6F 20 00 TABUADA DCB              "Tabuada do ",  0
  264 00000198 78 00   X       DCB              "x",0
  265 0000019A 3D 00   EQUAL   DCB              "=",0
  266 0000019C         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  267 0000019C         ; Fim do Arquivo
  268 0000019C         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  269 0000019C                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  270 0000019C                 END                          ;Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\lcd.d -o.\objects\lcd.o -IC:\Users\bruno\AppData\L
ocal\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL S
ETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SETA
 1" --list=.\listings\lcd.lst lcd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 11 in file lcd.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 22 in file lcd.s
   Uses
      None
Comment: .text unused
DIGIT_0_STR 00000178

Symbol: DIGIT_0_STR
   Definitions
      At line 253 in file lcd.s
   Uses
      At line 225 in file lcd.s
Comment: DIGIT_0_STR used once
DIGIT_1_STR 0000017A

Symbol: DIGIT_1_STR
   Definitions
      At line 254 in file lcd.s
   Uses
      At line 227 in file lcd.s
Comment: DIGIT_1_STR used once
DIGIT_2_STR 0000017C

Symbol: DIGIT_2_STR
   Definitions
      At line 255 in file lcd.s
   Uses
      At line 229 in file lcd.s
Comment: DIGIT_2_STR used once
DIGIT_3_STR 0000017E

Symbol: DIGIT_3_STR
   Definitions
      At line 256 in file lcd.s
   Uses
      At line 231 in file lcd.s
Comment: DIGIT_3_STR used once
DIGIT_4_STR 00000180

Symbol: DIGIT_4_STR
   Definitions
      At line 257 in file lcd.s
   Uses
      At line 233 in file lcd.s
Comment: DIGIT_4_STR used once
DIGIT_5_STR 00000182

Symbol: DIGIT_5_STR
   Definitions
      At line 258 in file lcd.s
   Uses
      At line 235 in file lcd.s
Comment: DIGIT_5_STR used once
DIGIT_6_STR 00000184

Symbol: DIGIT_6_STR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 259 in file lcd.s
   Uses
      At line 237 in file lcd.s
Comment: DIGIT_6_STR used once
DIGIT_7_STR 00000186

Symbol: DIGIT_7_STR
   Definitions
      At line 260 in file lcd.s
   Uses
      At line 239 in file lcd.s
Comment: DIGIT_7_STR used once
DIGIT_8_STR 00000188

Symbol: DIGIT_8_STR
   Definitions
      At line 261 in file lcd.s
   Uses
      At line 241 in file lcd.s
Comment: DIGIT_8_STR used once
DIGIT_9_STR 0000018A

Symbol: DIGIT_9_STR
   Definitions
      At line 262 in file lcd.s
   Uses
      At line 223 in file lcd.s
      At line 243 in file lcd.s

EQUAL 0000019A

Symbol: EQUAL
   Definitions
      At line 265 in file lcd.s
   Uses
      At line 181 in file lcd.s
Comment: EQUAL used once
LCD_Data 0000004E

Symbol: LCD_Data
   Definitions
      At line 87 in file lcd.s
   Uses
      At line 133 in file lcd.s
Comment: LCD_Data used once
LCD_EndOfString 0000009C

Symbol: LCD_EndOfString
   Definitions
      At line 136 in file lcd.s
   Uses
      At line 131 in file lcd.s
Comment: LCD_EndOfString used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 43 in file lcd.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 26 in file lcd.s
Comment: LCD_Init used once
LCD_Instruction 00000028

Symbol: LCD_Instruction
   Definitions
      At line 65 in file lcd.s
   Uses
      At line 47 in file lcd.s
      At line 50 in file lcd.s
      At line 53 in file lcd.s
      At line 56 in file lcd.s
      At line 113 in file lcd.s
      At line 151 in file lcd.s

LCD_Line2 00000074

Symbol: LCD_Line2
   Definitions
      At line 109 in file lcd.s
   Uses
      At line 27 in file lcd.s
      At line 171 in file lcd.s

LCD_PrintChar 0000008E

Symbol: LCD_PrintChar
   Definitions
      At line 127 in file lcd.s
   Uses
      At line 135 in file lcd.s
Comment: LCD_PrintChar used once
LCD_PrintString 0000008C

Symbol: LCD_PrintString
   Definitions
      At line 125 in file lcd.s
   Uses
      At line 28 in file lcd.s
      At line 168 in file lcd.s
      At line 176 in file lcd.s
      At line 182 in file lcd.s
      At line 245 in file lcd.s

LCD_Reset 000000AA

Symbol: LCD_Reset
   Definitions
      At line 147 in file lcd.s
   Uses
      At line 29 in file lcd.s
      At line 164 in file lcd.s

TABUADA 0000018C

Symbol: TABUADA
   Definitions
      At line 263 in file lcd.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 167 in file lcd.s
Comment: TABUADA used once
X 00000198

Symbol: X
   Definitions
      At line 264 in file lcd.s
   Uses
      At line 175 in file lcd.s
Comment: X used once
handle_zero 00000120

Symbol: handle_zero
   Definitions
      At line 213 in file lcd.s
   Uses
      At line 199 in file lcd.s
Comment: handle_zero used once
print_digits 00000128

Symbol: print_digits
   Definitions
      At line 218 in file lcd.s
   Uses
      At line 211 in file lcd.s
      At line 216 in file lcd.s
      At line 246 in file lcd.s

print_done 00000172

Symbol: print_done
   Definitions
      At line 248 in file lcd.s
   Uses
      At line 220 in file lcd.s
Comment: print_done used once
print_numero 000000FC

Symbol: print_numero
   Definitions
      At line 192 in file lcd.s
   Uses
      At line 31 in file lcd.s
      At line 170 in file lcd.s
      At line 173 in file lcd.s
      At line 179 in file lcd.s
      At line 185 in file lcd.s

print_tabuada 000000C2

Symbol: print_tabuada
   Definitions
      At line 162 in file lcd.s
   Uses
      At line 30 in file lcd.s
Comment: print_tabuada used once
store_digits 0000010A




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Symbol: store_digits
   Definitions
      At line 201 in file lcd.s
   Uses
      At line 209 in file lcd.s
Comment: store_digits used once
28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

PortK_Output 00000000

Symbol: PortK_Output
   Definitions
      At line 36 in file lcd.s
   Uses
      At line 72 in file lcd.s
      At line 94 in file lcd.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 35 in file lcd.s
   Uses
      At line 69 in file lcd.s
      At line 78 in file lcd.s
      At line 91 in file lcd.s
      At line 100 in file lcd.s

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 37 in file lcd.s
   Uses
      At line 75 in file lcd.s
      At line 97 in file lcd.s
      At line 116 in file lcd.s
      At line 138 in file lcd.s
      At line 154 in file lcd.s

3 symbols
368 symbols in table
