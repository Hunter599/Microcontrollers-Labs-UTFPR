


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ; ------------------------------------------------------
                       -------------------------
    3 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    4 00000000         ; ------------------------------------------------------
                       -------------------------
    5 00000000         
    6 00000000         ; Declarações EQU - Defines
    7 00000000         ;<NOME>         EQU <VALOR>
    8 00000000         ; ========================
    9 00000000 00000004 
                       CLOSING EQU              4
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         ; Área de Dados - Declarações de variáveis
   12 00000000                 AREA             DATA, ALIGN=2
   13 00000000         ; Se alguma variável for chamada em outro arquivo
   14 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   15 00000000         ; partir de outro arquivo
   16 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   17 00000000         ; de <tam> bytes a partir da primeira 
   18 00000000         ; posição da RAM  
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       -------------------------
   21 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   22 00000000         ;                  código
   23 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   24 00000000         
   25 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo
   26 00000000         ; EXPORT <func>    ; Permite chamar a função a partir de
                        outro arquivo
   27 00000000                 EXPORT           MapMatrixKeyboard
   28 00000000                 EXPORT           update_tabuada
   29 00000000         
   30 00000000         ; Se chamar alguma função externa 
   31 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma função de outro
   32 00000000                 IMPORT           PortM_Output
   33 00000000                 IMPORT           PortL_Input
   34 00000000                 IMPORT           LCD_PrintString
   35 00000000                 IMPORT           LCD_Reset
   36 00000000                 IMPORT           SysTick_Wait1ms
   37 00000000                 IMPORT           print_tabuada
   38 00000000                 IMPORT           print_numero
   39 00000000         
   40 00000000 20000A00 
                       start_mem
                               EQU              0x20000A00
   41 00000000         
   42 00000000         ; Função MapMatrixKeyboard
   43 00000000         ; Mapeia o teclado matricial
   44 00000000         ; Parâmetro de entrada:



ARM Macro Assembler    Page 2 


   45 00000000         ; Parâmetro de saída:
   46 00000000         MapMatrixKeyboard
   47 00000000 B501            PUSH             {LR, R0}
   48 00000002         ; ------------------------------------------------------
                       -----
   49 00000002 F04F 00E0       MOV              R0, #2_11100000 ; Iterando sobr
                                                            e a primeira coluna
                                                            
   50 00000006 F7FF FFFE       BL               PortM_Output
   51 0000000A F7FF FFFE       BL               PortL_Input
   52 0000000E         
   53 0000000E 280E            CMP              R0, #2_1110 ; Número 1 foi pres
                                                            sionado
   54 00000010 BF08 F000 
              F84B             BLEQ.W           DIGIT_1
   55 00000016         
   56 00000016 280D            CMP              R0, #2_1101 ; Número 4 foi pres
                                                            sionado
   57 00000018 BF08 F000 
              F865             BLEQ.W           DIGIT_4
   58 0000001E         
   59 0000001E 280B            CMP              R0, #2_1011 ; Número 7 foi pres
                                                            sionado
   60 00000020 BF08 F000 
              F87F             BLEQ.W           DIGIT_7
   61 00000026         
   62 00000026 2807            CMP              R0, #2_0111 ; Símbolo * foi pre
                                                            ssionado
   63 00000028 BF08 F000 
              F899             BLEQ.W           DIGIT_AST   ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
   64 0000002E         ; ------------------------------------------------------
                       -----
   65 0000002E         
   66 0000002E         ; ------------------------------------------------------
                       -----
   67 0000002E F04F 00D0       MOV              R0, #2_11010000 ; Iterando sobr
                                                            e a segunda coluna
   68 00000032 F7FF FFFE       BL               PortM_Output
   69 00000036 F7FF FFFE       BL               PortL_Input
   70 0000003A         
   71 0000003A 280E            CMP              R0, #2_1110 ; Número 2 foi pres
                                                            sionado
   72 0000003C BF08 F000 
              F83F             BLEQ.W           DIGIT_2
   73 00000042         
   74 00000042 280D            CMP              R0, #2_1101 ; Número 5 foi pres
                                                            sionado
   75 00000044 BF08 F000 
              F859             BLEQ.W           DIGIT_5
   76 0000004A         
   77 0000004A 280B            CMP              R0, #2_1011 ; Número 8 foi pres
                                                            sionado
   78 0000004C BF08 F000 
              F873             BLEQ.W           DIGIT_8
   79 00000052         
   80 00000052 2807            CMP              R0, #2_0111 ; Número 0 foi pres



ARM Macro Assembler    Page 3 


                                                            sionado
   81 00000054 BF08 F000 
              F823             BLEQ.W           DIGIT_0
   82 0000005A         ; ------------------------------------------------------
                       -----
   83 0000005A         
   84 0000005A         ; ------------------------------------------------------
                       -----
   85 0000005A F04F 00B0       MOV              R0, #2_10110000 ; Iterando sobr
                                                            e a terceira coluna
                                                            
   86 0000005E F7FF FFFE       BL               PortM_Output
   87 00000062 F7FF FFFE       BL               PortL_Input
   88 00000066         
   89 00000066 280E            CMP              R0, #2_1110 ; Número 3 foi pres
                                                            sionado
   90 00000068 BF08 F000 
              F833             BLEQ.W           DIGIT_3
   91 0000006E         
   92 0000006E 280D            CMP              R0, #2_1101 ; Número 6 foi pres
                                                            sionado
   93 00000070 BF08 F000 
              F84D             BLEQ.W           DIGIT_6
   94 00000076         
   95 00000076 280B            CMP              R0, #2_1011 ; Número 9 foi pres
                                                            sionado
   96 00000078 BF08 F000 
              F867             BLEQ.W           DIGIT_9
   97 0000007E         
   98 0000007E 2807            CMP              R0, #2_0111 ; Símbolo # foi pre
                                                            ssionado
   99 00000080 BF08 F000 
              F87A             BLEQ.W           DIGIT_HASH  ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
  100 00000086         ; ------------------------------------------------------
                       -----
  101 00000086         
  102 00000086 E8BD 4001       POP              {LR, R0}
  103 0000008A 4770            BX               LR
  104 0000008C         
  105 0000008C         ; Funções DIGIT_X
  106 0000008C         ; Tratam a resposta do sistema para cada tecla pressiona
                       da
  107 0000008C         ; Parâmetro de entrada: Não tem
  108 0000008C         ; Parâmetro de saída: R6 -> O dígito inserido
  109 0000008C         
  110 0000008C         process_digit
  111 0000008C B500            PUSH             {LR}
  112 0000008E F7FF FFFE       BL               update_tabuada
  113 00000092 4684            MOV              R12, R0
  114 00000094 468B            MOV              R11, R1
  115 00000096 F7FF FFFE       BL               print_tabuada
  116 0000009A F85D EB04       POP              {LR}
  117 0000009E 4770            BX               LR
  118 000000A0         
  119 000000A0         DIGIT_0
  120 000000A0 B501            PUSH             {LR, R0}



ARM Macro Assembler    Page 4 


  121 000000A2 F000 F873       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  122 000000A6 E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  123 000000AA 4770            BX               LR
  124 000000AC         
  125 000000AC         DIGIT_1
  126 000000AC B501            PUSH             {LR, R0}
  127 000000AE F000 F86D       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  128 000000B2 F04F 0001       MOV              R0, #1
  129 000000B6 F7FF FFE9       BL               process_digit
  130 000000BA E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  131 000000BE 4770            BX               LR
  132 000000C0         
  133 000000C0         DIGIT_2
  134 000000C0 B501            PUSH             {LR, R0}
  135 000000C2 F000 F863       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  136 000000C6 F04F 0002       MOV              R0, #2
  137 000000CA F7FF FFDF       BL               process_digit
  138 000000CE E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  139 000000D2 4770            BX               LR
  140 000000D4         
  141 000000D4         DIGIT_3
  142 000000D4 B501            PUSH             {LR, R0}
  143 000000D6 F000 F859       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  144 000000DA F04F 0003       MOV              R0, #3
  145 000000DE F7FF FFD5       BL               process_digit
  146 000000E2 E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  147 000000E6 4770            BX               LR
  148 000000E8         
  149 000000E8         DIGIT_4
  150 000000E8 B501            PUSH             {LR, R0}
  151 000000EA F000 F84F       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  152 000000EE F04F 0004       MOV              R0, #4
  153 000000F2 F7FF FFCB       BL               process_digit
  154 000000F6 E8BD 4001       POP              {LR, R0}
  155 000000FA 4770            BX               LR
  156 000000FC         
  157 000000FC         DIGIT_5



ARM Macro Assembler    Page 5 


  158 000000FC B501            PUSH             {LR, R0}
  159 000000FE F000 F845       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  160 00000102 F04F 0005       MOV              R0, #5
  161 00000106 F7FF FFC1       BL               process_digit
  162 0000010A E8BD 4001       POP              {LR, R0}
  163 0000010E 4770            BX               LR
  164 00000110         
  165 00000110         DIGIT_6
  166 00000110 B501            PUSH             {LR, R0}
  167 00000112 F000 F83B       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  168 00000116 F04F 0006       MOV              R0, #6
  169 0000011A F7FF FFB7       BL               process_digit
  170 0000011E E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  171 00000122 4770            BX               LR
  172 00000124         
  173 00000124         DIGIT_7
  174 00000124 B501            PUSH             {LR, R0}
  175 00000126 F000 F831       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  176 0000012A F04F 0007       MOV              R0, #7
  177 0000012E F7FF FFAD       BL               process_digit
  178 00000132 E8BD 4001       POP              {LR, R0}
  179 00000136 4770            BX               LR
  180 00000138         DIGIT_8
  181 00000138 B501            PUSH             {LR, R0}
  182 0000013A F000 F827       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  183 0000013E F04F 0008       MOV              R0, #8
  184 00000142 F7FF FFA3       BL               process_digit
  185 00000146 E8BD 4001       POP              {LR, R0}
  186 0000014A 4770            BX               LR
  187 0000014C         
  188 0000014C         DIGIT_9
  189 0000014C B501            PUSH             {LR, R0}
  190 0000014E F000 F81D       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  191 00000152 F04F 0009       MOV              R0, #9
  192 00000156 F7FF FF99       BL               process_digit
  193 0000015A E8BD 4001       POP              {LR, R0}
  194 0000015E 4770            BX               LR
  195 00000160         
  196 00000160         DIGIT_AST
  197 00000160 B500            PUSH             {LR}
  198 00000162         
  199 00000162 F04F 060E       MOV              R6, #0xE    ; Guarda o dígito i
                                                            nserido
  200 00000166         
  201 00000166 4C1B            LDR              R4, =DIGIT_AST_STR ; Imprime o 
                                                            dígito no LCD



ARM Macro Assembler    Page 6 


  202 00000168 F7FF FFFE       BL               LCD_PrintString
  203 0000016C         
  204 0000016C F000 F80E       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  205 00000170         
  206 00000170 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  207 00000174         
  208 00000174 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  209 00000178 4770            BX               LR
  210 0000017A         
  211 0000017A         DIGIT_HASH
  212 0000017A B500            PUSH             {LR}
  213 0000017C         
  214 0000017C 2F04            CMP              R7, #4      ; Verifica se 4 díg
                                                            itos já foram inser
                                                            idos
  215 0000017E BF28 2504       MOVHS            R5, #CLOSING ; Senha de 4 dígit
                                                            os inserida, coloca
                                                             o cofre em process
                                                            o de fechamento
  216 00000182         
  217 00000182 F000 F803       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  218 00000186         
  219 00000186 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  220 0000018A 4770            BX               LR
  221 0000018C         
  222 0000018C         ; Função Debouncing
  223 0000018C         ; Trata o bouncing da tecla aguardando um tempo fixo (0,
                       5s)
  224 0000018C         ; Parâmetro de entrada: Não tem
  225 0000018C         ; Parâmetro de saída: Não tem
  226 0000018C         Debouncing
  227 0000018C B500            PUSH             {LR}
  228 0000018E         
  229 0000018E F44F 70FA       MOV              R0, #500
  230 00000192 F7FF FFFE       BL               SysTick_Wait1ms
  231 00000196         
  232 00000196 F85D EB04       POP              {LR}
  233 0000019A 4770            BX               LR
  234 0000019C         
  235 0000019C         
  236 0000019C         ;Input: R0 N
  237 0000019C         ;Output R0 = N, R1 = M
  238 0000019C         update_tabuada
  239 0000019C B51C            PUSH             {LR ,R2, R3, R4}
  240 0000019E         
  241 0000019E F04F 0404       MOV              R4, #4
  242 000001A2 490D            LDR              R1, =start_mem



ARM Macro Assembler    Page 7 


  243 000001A4 FB04 1200       MLA              R2, R4, R0, R1
  244 000001A8         
  245 000001A8 6813            LDR              R3, [R2]
  246 000001AA F103 0301       ADD              R3, #1
  247 000001AE         
  248 000001AE 2B09            CMP              R3, #9
  249 000001B0 BFC8 2300       MOVGT            R3, #0
  250 000001B4         
  251 000001B4 6013            STR              R3, [R2]
  252 000001B6         
  253 000001B6 4619            MOV              R1, R3
  254 000001B8 E8BD 401C       POP              {LR ,R2, R3, R4}
  255 000001BC         
  256 000001BC 4770            BX               LR
  257 000001BE         
  258 000001BE         ; Definição dos textos do LCD
  259 000001BE 30 00   DIGIT_0_STR
                               DCB              "0", 0
  260 000001C0 31 00   DIGIT_1_STR
                               DCB              "1", 0
  261 000001C2 32 00   DIGIT_2_STR
                               DCB              "2", 0
  262 000001C4 33 00   DIGIT_3_STR
                               DCB              "3", 0
  263 000001C6 34 00   DIGIT_4_STR
                               DCB              "4", 0
  264 000001C8 35 00   DIGIT_5_STR
                               DCB              "5", 0
  265 000001CA 36 00   DIGIT_6_STR
                               DCB              "6", 0
  266 000001CC 37 00   DIGIT_7_STR
                               DCB              "7", 0
  267 000001CE 38 00   DIGIT_8_STR
                               DCB              "8", 0
  268 000001D0 39 00   DIGIT_9_STR
                               DCB              "9", 0
  269 000001D2         
  270 000001D2 2A 00   DIGIT_AST_STR
                               DCB              "*", 0
  271 000001D4         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  272 000001D4         ; Fim do Arquivo
  273 000001D4         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  274 000001D4                 ALIGN                        ; Garante que o fim
                                                             da seção está alin
                                                            hada 
  275 000001D4                 END                          ; Fim do arquivo
              00000000 
              20000A00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\matrix_keyboard.d -o.\objects\matrix_keyboard.o -I
C:\Users\bruno\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C1
29 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --prede
fine="TM4C1294NCPDT SETA 1" --list=.\listings\matrix_keyboard.lst matrix_keyboa
rd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 12 in file matrix_keyboard.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file matrix_keyboard.s
   Uses
      None
Comment: .text unused
DIGIT_0 000000A0

Symbol: DIGIT_0
   Definitions
      At line 119 in file matrix_keyboard.s
   Uses
      At line 81 in file matrix_keyboard.s
Comment: DIGIT_0 used once
DIGIT_0_STR 000001BE

Symbol: DIGIT_0_STR
   Definitions
      At line 259 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_0_STR unused
DIGIT_1 000000AC

Symbol: DIGIT_1
   Definitions
      At line 125 in file matrix_keyboard.s
   Uses
      At line 54 in file matrix_keyboard.s
Comment: DIGIT_1 used once
DIGIT_1_STR 000001C0

Symbol: DIGIT_1_STR
   Definitions
      At line 260 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_1_STR unused
DIGIT_2 000000C0

Symbol: DIGIT_2
   Definitions
      At line 133 in file matrix_keyboard.s
   Uses
      At line 72 in file matrix_keyboard.s
Comment: DIGIT_2 used once
DIGIT_2_STR 000001C2

Symbol: DIGIT_2_STR
   Definitions
      At line 261 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_2_STR unused
DIGIT_3 000000D4

Symbol: DIGIT_3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 141 in file matrix_keyboard.s
   Uses
      At line 90 in file matrix_keyboard.s
Comment: DIGIT_3 used once
DIGIT_3_STR 000001C4

Symbol: DIGIT_3_STR
   Definitions
      At line 262 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_3_STR unused
DIGIT_4 000000E8

Symbol: DIGIT_4
   Definitions
      At line 149 in file matrix_keyboard.s
   Uses
      At line 57 in file matrix_keyboard.s
Comment: DIGIT_4 used once
DIGIT_4_STR 000001C6

Symbol: DIGIT_4_STR
   Definitions
      At line 263 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_4_STR unused
DIGIT_5 000000FC

Symbol: DIGIT_5
   Definitions
      At line 157 in file matrix_keyboard.s
   Uses
      At line 75 in file matrix_keyboard.s
Comment: DIGIT_5 used once
DIGIT_5_STR 000001C8

Symbol: DIGIT_5_STR
   Definitions
      At line 264 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_5_STR unused
DIGIT_6 00000110

Symbol: DIGIT_6
   Definitions
      At line 165 in file matrix_keyboard.s
   Uses
      At line 93 in file matrix_keyboard.s
Comment: DIGIT_6 used once
DIGIT_6_STR 000001CA

Symbol: DIGIT_6_STR
   Definitions
      At line 265 in file matrix_keyboard.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: DIGIT_6_STR unused
DIGIT_7 00000124

Symbol: DIGIT_7
   Definitions
      At line 173 in file matrix_keyboard.s
   Uses
      At line 60 in file matrix_keyboard.s
Comment: DIGIT_7 used once
DIGIT_7_STR 000001CC

Symbol: DIGIT_7_STR
   Definitions
      At line 266 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_7_STR unused
DIGIT_8 00000138

Symbol: DIGIT_8
   Definitions
      At line 180 in file matrix_keyboard.s
   Uses
      At line 78 in file matrix_keyboard.s
Comment: DIGIT_8 used once
DIGIT_8_STR 000001CE

Symbol: DIGIT_8_STR
   Definitions
      At line 267 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_8_STR unused
DIGIT_9 0000014C

Symbol: DIGIT_9
   Definitions
      At line 188 in file matrix_keyboard.s
   Uses
      At line 96 in file matrix_keyboard.s
Comment: DIGIT_9 used once
DIGIT_9_STR 000001D0

Symbol: DIGIT_9_STR
   Definitions
      At line 268 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_9_STR unused
DIGIT_AST 00000160

Symbol: DIGIT_AST
   Definitions
      At line 196 in file matrix_keyboard.s
   Uses
      At line 63 in file matrix_keyboard.s
Comment: DIGIT_AST used once
DIGIT_AST_STR 000001D2



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: DIGIT_AST_STR
   Definitions
      At line 270 in file matrix_keyboard.s
   Uses
      At line 201 in file matrix_keyboard.s
Comment: DIGIT_AST_STR used once
DIGIT_HASH 0000017A

Symbol: DIGIT_HASH
   Definitions
      At line 211 in file matrix_keyboard.s
   Uses
      At line 99 in file matrix_keyboard.s
Comment: DIGIT_HASH used once
Debouncing 0000018C

Symbol: Debouncing
   Definitions
      At line 226 in file matrix_keyboard.s
   Uses
      At line 121 in file matrix_keyboard.s
      At line 127 in file matrix_keyboard.s
      At line 135 in file matrix_keyboard.s
      At line 143 in file matrix_keyboard.s
      At line 151 in file matrix_keyboard.s
      At line 159 in file matrix_keyboard.s
      At line 167 in file matrix_keyboard.s
      At line 175 in file matrix_keyboard.s
      At line 182 in file matrix_keyboard.s
      At line 190 in file matrix_keyboard.s
      At line 204 in file matrix_keyboard.s
      At line 217 in file matrix_keyboard.s

MapMatrixKeyboard 00000000

Symbol: MapMatrixKeyboard
   Definitions
      At line 46 in file matrix_keyboard.s
   Uses
      At line 27 in file matrix_keyboard.s
Comment: MapMatrixKeyboard used once
process_digit 0000008C

Symbol: process_digit
   Definitions
      At line 110 in file matrix_keyboard.s
   Uses
      At line 129 in file matrix_keyboard.s
      At line 137 in file matrix_keyboard.s
      At line 145 in file matrix_keyboard.s
      At line 153 in file matrix_keyboard.s
      At line 161 in file matrix_keyboard.s
      At line 169 in file matrix_keyboard.s
      At line 177 in file matrix_keyboard.s
      At line 184 in file matrix_keyboard.s
      At line 192 in file matrix_keyboard.s

update_tabuada 0000019C



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


Symbol: update_tabuada
   Definitions
      At line 238 in file matrix_keyboard.s
   Uses
      At line 28 in file matrix_keyboard.s
      At line 112 in file matrix_keyboard.s

28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CLOSING 00000004

Symbol: CLOSING
   Definitions
      At line 9 in file matrix_keyboard.s
   Uses
      At line 215 in file matrix_keyboard.s
Comment: CLOSING used once
start_mem 20000A00

Symbol: start_mem
   Definitions
      At line 40 in file matrix_keyboard.s
   Uses
      At line 242 in file matrix_keyboard.s
Comment: start_mem used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_PrintString 00000000

Symbol: LCD_PrintString
   Definitions
      At line 34 in file matrix_keyboard.s
   Uses
      At line 202 in file matrix_keyboard.s
Comment: LCD_PrintString used once
LCD_Reset 00000000

Symbol: LCD_Reset
   Definitions
      At line 35 in file matrix_keyboard.s
   Uses
      None
Comment: LCD_Reset unused
PortL_Input 00000000

Symbol: PortL_Input
   Definitions
      At line 33 in file matrix_keyboard.s
   Uses
      At line 51 in file matrix_keyboard.s
      At line 69 in file matrix_keyboard.s
      At line 87 in file matrix_keyboard.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 32 in file matrix_keyboard.s
   Uses
      At line 50 in file matrix_keyboard.s
      At line 68 in file matrix_keyboard.s
      At line 86 in file matrix_keyboard.s

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 36 in file matrix_keyboard.s
   Uses
      At line 230 in file matrix_keyboard.s
Comment: SysTick_Wait1ms used once
print_numero 00000000

Symbol: print_numero
   Definitions
      At line 38 in file matrix_keyboard.s
   Uses
      None
Comment: print_numero unused
print_tabuada 00000000

Symbol: print_tabuada
   Definitions
      At line 37 in file matrix_keyboard.s
   Uses
      At line 115 in file matrix_keyboard.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Comment: print_tabuada used once
7 symbols
374 symbols in table
