


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         ; Área de Dados - Declarações de variáveis
   18 00000000                 AREA             DATA, ALIGN=2
   19 00000000         ; Se alguma variável for chamada em outro arquivo
   20 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   21 00000000         ; partir de outro arquivo
   22 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   23 00000000         ; de <tam> bytes a partir da primeira 
   24 00000000         ; posição da RAM  
   25 00000000         
   26 00000000         ; ------------------------------------------------------
                       -------------------------
   27 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   28 00000000         ;                  código
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000         
   31 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   32 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   33 00000000         ; outro arquivo. No caso startup.s
   34 00000000         
   35 00000000         ; Se chamar alguma função externa 
   36 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   37 00000000         ; função <func>
   38 00000000                 IMPORT           PLL_Init
   39 00000000                 IMPORT           SysTick_Init
   40 00000000                 IMPORT           SysTick_Wait1ms
   41 00000000                 IMPORT           GPIO_Init
   42 00000000                 IMPORT           PortP_Output
   43 00000000                 IMPORT           PortQ_Output
   44 00000000                 IMPORT           PortA_Output



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           PortB_Output
   46 00000000                 IMPORT           PortJ_Input
   47 00000000         
   48 00000000         
   49 00000000 20000A00 
                       start_7seg_mem
                               EQU              0x20000A00
   50 00000000 20000A24 
                       end_7seg_mem
                               EQU              0x20000A24
   51 00000000         
   52 00000000 20000C00 
                       start_led_mem
                               EQU              0x20000C00
   53 00000000 20000C24 
                       end_led_mem
                               EQU              0x20000C24
   54 00000000         
   55 00000000 00000020 
                       tranP   EQU              2_00100000
   56 00000000 00000010 
                       tranB4  EQU              2_00010000
   57 00000000 00000020 
                       tranB5  EQU              2_00100000
   58 00000000         
   59 00000000 00000005 
                       waitTime
                               EQU              5
   60 00000000 00000005 
                       delayTime
                               EQU              5
   61 00000000         
   62 00000000         
   63 00000000         mem7seg_init
   64 00000000 F8DF C23C       LDR              R12, =start_7seg_mem
   65 00000004         
   66 00000004         ;7seg1 (second 7 segment display)
   67 00000004         
   68 00000004 F04F 003F       MOV              R0, #2_00111111 ;0
   69 00000008 F8CC 0000       STR              R0, [R12]
   70 0000000C         
   71 0000000C F04F 0006       MOV              R0, #2_00000110 ;1
   72 00000010 F84C 0F04       STR              R0, [R12, #4]!
   73 00000014         
   74 00000014 F04F 005B       MOV              R0, #2_01011011 ;2
   75 00000018 F84C 0F04       STR              R0, [R12, #4]!
   76 0000001C         
   77 0000001C F04F 004F       MOV              R0, #2_01001111 ;3
   78 00000020 F84C 0F04       STR              R0, [R12, #4]!
   79 00000024         
   80 00000024 F04F 0066       MOV              R0, #2_01100110 ;4
   81 00000028 F84C 0F04       STR              R0, [R12, #4]!
   82 0000002C         
   83 0000002C F04F 006D       MOV              R0, #2_01101101 ;5
   84 00000030 F84C 0F04       STR              R0, [R12, #4]!
   85 00000034         
   86 00000034 F04F 007D       MOV              R0, #2_01111101 ;6
   87 00000038 F84C 0F04       STR              R0, [R12, #4]!
   88 0000003C         



ARM Macro Assembler    Page 3 


   89 0000003C F04F 0007       MOV              R0, #2_00000111 ;7
   90 00000040 F84C 0F04       STR              R0, [R12, #4]!
   91 00000044         
   92 00000044 F04F 007F       MOV              R0, #2_01111111 ;8
   93 00000048 F84C 0F04       STR              R0, [R12, #4]!
   94 0000004C         
   95 0000004C F04F 006F       MOV              R0, #2_01101111 ;9
   96 00000050 F84C 0F04       STR              R0, [R12, #4]!
   97 00000054         
   98 00000054         
   99 00000054         
  100 00000054 4770            BX               LR
  101 00000056         ; ------------------------------------------------------
                       -------------------------
  102 00000056         ; Função main()
  103 00000056         Start
  104 00000056 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
  105 0000005A F7FF FFFE       BL               SysTick_Init
  106 0000005E F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
  107 00000062         
  108 00000062 F7FF FFCD       BL               mem7seg_init
  109 00000066         
  110 00000066 F04F 0A00       MOV              R10, #0     ;Counter
  111 0000006A F04F 0B01       MOV              R11, #1     ;Step
  112 0000006E F04F 0800       MOV              R8, #0      ;Clock
  113 00000072         
  114 00000072         MainLoop
  115 00000072         
  116 00000072         
  117 00000072 F1B8 0F64       CMP              R8, #100
  118 00000076 F108 0801       ADD              R8, #1
  119 0000007A BF04            ITT              EQ
  120 0000007C F04F 0800       MOVEQ            R8, #0
  121 00000080 F000 F805       BLEQ             updateNumber
  122 00000084 F000 F891       BL               seg7_show
  123 00000088 F000 F866       BL               showLeds
  124 0000008C         
  125 0000008C         
  126 0000008C         
  127 0000008C E7F1            B                MainLoop    ;Volta para o laço 
                                                            principal
  128 0000008E         
  129 0000008E         
  130 0000008E         ; ------------------------------------------------------
                       -------------------------
  131 0000008E         ; Updates the count for 7 segment led display consistenc
                       y
  132 0000008E         ; Parâmetro de entrada: -
  133 0000008E         ; Parâmetro de saída: -
  134 0000008E         updateNumber
  135 0000008E B500            PUSH             {LR}
  136 00000090         
  137 00000090 F000 F879       BL               count
  138 00000094 F000 F846       BL               checkCounter



ARM Macro Assembler    Page 4 


  139 00000098 F000 F81F       BL               checkButtons
  140 0000009C F000 F803       BL               checkStepper
  141 000000A0         
  142 000000A0 F85D EB04       POP{LR}
  143 000000A4 4770            BX               LR
  144 000000A6         
  145 000000A6         
  146 000000A6         
  147 000000A6         ; ------------------------------------------------------
                       -------------------------
  148 000000A6         ; Checks for overflown and underflow for the stepper
  149 000000A6         ; Parâmetro de entrada: -
  150 000000A6         ; Parâmetro de saída: -
  151 000000A6         checkStepper
  152 000000A6 B500            PUSH             {LR}
  153 000000A8         
  154 000000A8 F1BB 0F00       CMP              R11, #0
  155 000000AC DC0A            BGT              overStep
  156 000000AE         
  157 000000AE         ;underStep
  158 000000AE F11B 0F09       CMP              R11, #-9
  159 000000B2 DB02            BLT              under_reset
  160 000000B4         
  161 000000B4 F85D EB04       POP              {LR}
  162 000000B8 4770            BX               LR
  163 000000BA         
  164 000000BA         under_reset
  165 000000BA F10B 0B09       ADD              R11, #9
  166 000000BE         
  167 000000BE F85D EB04       POP              {LR}
  168 000000C2 4770            BX               LR
  169 000000C4         
  170 000000C4         overStep
  171 000000C4 F1BB 0F09       CMP              R11, #9
  172 000000C8 DC02            BGT              over_reset
  173 000000CA         
  174 000000CA F85D EB04       POP              {LR}
  175 000000CE 4770            BX               LR
  176 000000D0         
  177 000000D0         over_reset
  178 000000D0 F1AB 0B09       SUB              R11, #9
  179 000000D4         
  180 000000D4 F85D EB04       POP              {LR}
  181 000000D8 4770            BX               LR
  182 000000DA         
  183 000000DA         
  184 000000DA         ; ------------------------------------------------------
                       -------------------------
  185 000000DA         ; Checks if buttons status changed
  186 000000DA         ; Parâmetro de entrada: -
  187 000000DA         ; Parâmetro de saída: -
  188 000000DA         checkButtons
  189 000000DA B500            PUSH             {LR}
  190 000000DC         
  191 000000DC         
  192 000000DC F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0



ARM Macro Assembler    Page 5 


  193 000000E0         ;LSR R5, R0, #0
  194 000000E0 4605            MOV              R5, R0
  195 000000E2 EA4F 75C5       LSL              R5, #31
  196 000000E6         
  197 000000E6 42B5            CMP              R5, R6
  198 000000E8 BFC8 F000 
              F80D             BLGT             stepper
  199 000000EE 462E            MOV              R6, R5
  200 000000F0         
  201 000000F0 EA4F 0550       LSR              R5, R0, #1
  202 000000F4 EA4F 75C5       LSL              R5, #31
  203 000000F8         
  204 000000F8 42BD            CMP              R5, R7
  205 000000FA BFC8 F000 
              F84F             BLGT             switchStep
  206 00000100 462F            MOV              R7, R5
  207 00000102         
  208 00000102         
  209 00000102 F85D EB04       POP              {LR}
  210 00000106 4770            BX               LR
  211 00000108         
  212 00000108         ; ------------------------------------------------------
                       -------------------------
  213 00000108         ; Steps up or down the step
  214 00000108         ; Parâmetro de entrada: R11
  215 00000108         ; Parâmetro de saída: -
  216 00000108         
  217 00000108         stepper
  218 00000108 B500            PUSH             {LR}
  219 0000010A         
  220 0000010A F1BB 0F00       CMP              R11, #0
  221 0000010E DC04            BGT              stepUp
  222 00000110         
  223 00000110         ;stepDown
  224 00000110 F10B 3BFF       ADD              R11, #-1
  225 00000114         
  226 00000114 F85D EB04       POP              {LR}
  227 00000118 4770            BX               LR
  228 0000011A         
  229 0000011A         stepUp
  230 0000011A F10B 0B01       ADD              R11, #1
  231 0000011E         
  232 0000011E F85D EB04       POP              {LR}
  233 00000122 4770            BX               LR
  234 00000124         
  235 00000124         
  236 00000124         ; ------------------------------------------------------
                       -------------------------
  237 00000124         ; Checks for underflow and overflows
  238 00000124         ; Parâmetro de entrada: R10
  239 00000124         ; Parâmetro de saída: -
  240 00000124         
  241 00000124         checkCounter
  242 00000124 B500            PUSH             {LR}
  243 00000126         
  244 00000126 F1BB 0F00       CMP              R11, #0
  245 0000012A DC0A            BGT              overflow
  246 0000012C         
  247 0000012C         ;Underflow



ARM Macro Assembler    Page 6 


  248 0000012C F1BA 0F00       CMP              R10, #0
  249 00000130 DD02            BLE              desc_reset
  250 00000132         
  251 00000132 F85D EB04       POP              {LR}
  252 00000136 4770            BX               LR          ;out
  253 00000138         
  254 00000138         desc_reset
  255 00000138 F10A 0A64       ADD              R10, #100
  256 0000013C         
  257 0000013C F85D EB04       POP              {LR}
  258 00000140 4770            BX               LR          ;out
  259 00000142         
  260 00000142         overflow
  261 00000142 F1BA 0F63       CMP              R10, #99
  262 00000146 DA02            BGE              asc_reset
  263 00000148         
  264 00000148 F85D EB04       POP              {LR}
  265 0000014C 4770            BX               LR          ;out
  266 0000014E         
  267 0000014E         asc_reset
  268 0000014E F1AA 0A64       SUB              R10, #100
  269 00000152 F85D EB04       POP              {LR}
  270 00000156 4770            BX               LR
  271 00000158         
  272 00000158         ; ------------------------------------------------------
                       -------------------------
  273 00000158         ; Lits up Leds
  274 00000158         ; Parâmetro de entrada: R10
  275 00000158         ; Parâmetro de saída: 
  276 00000158         showLeds
  277 00000158 B500            PUSH             {LR}
  278 0000015A         
  279 0000015A 4650            MOV              R0, R10
  280 0000015C B401            PUSH             {R0}
  281 0000015E         
  282 0000015E F04F 0020       LDR              R0, =tranP
  283 00000162 F7FF FFFE       BL               PortP_Output
  284 00000166         
  285 00000166 BC01            POP{R0}
  286 00000168 F7FF FFFE       BL               PortQ_Output
  287 0000016C F7FF FFFE       BL               PortA_Output
  288 00000170 F04F 0001       MOV              R0, #1      ;Chamar a rotina pa
                                                            ra esperar 0,01s
  289 00000174 F7FF FFFE       BL               SysTick_Wait1ms
  290 00000178         
  291 00000178 F04F 0000       MOV              R0, #0
  292 0000017C F7FF FFFE       BL               PortP_Output
  293 00000180         
  294 00000180         
  295 00000180         
  296 00000180 F85D EB04       POP              {LR}
  297 00000184 4770            BX               LR
  298 00000186         
  299 00000186         ; ------------------------------------------------------
                       -------------------------
  300 00000186         ; Counts up or down
  301 00000186         ; Parâmetro de entrada: R10
  302 00000186         ; Parâmetro de saída: 
  303 00000186         count



ARM Macro Assembler    Page 7 


  304 00000186 B500            PUSH             {LR}
  305 00000188 F1BB 0F00       CMP              R11, #0
  306 0000018C DC03            BGT              asc
  307 0000018E 44DA            ADD              R10, R11
  308 00000190 F85D EB04       POP              {LR}
  309 00000194 4770            BX               LR
  310 00000196         asc
  311 00000196 44DA            ADD              R10, R11
  312 00000198 F85D EB04       POP              {LR}
  313 0000019C 4770            BX               LR
  314 0000019E         
  315 0000019E         ; ------------------------------------------------------
                       -------------------------
  316 0000019E         ; Switches the step "direction"
  317 0000019E         ; Parâmetro de entrada: R11
  318 0000019E         ; Parâmetro de saída: -
  319 0000019E         switchStep
  320 0000019E B500            PUSH             {LR}
  321 000001A0 F1CB 0B00       RSB              R11, R11, #0
  322 000001A4 F85D EB04       POP{LR}
  323 000001A8 4770            BX               LR
  324 000001AA         
  325 000001AA         ; ------------------------------------------------------
                       -------------------------
  326 000001AA         ; Show number in 7 segment display
  327 000001AA         ; Parâmetro de entrada: R10
  328 000001AA         ; Parâmetro de saída: R1 --> binario em formato SSD
  329 000001AA         seg7_show
  330 000001AA         
  331 000001AA B500            PUSH             {LR}
  332 000001AC         
  333 000001AC 4650            MOV              R0, R10
  334 000001AE F000 F82C       BL               bin2ssd
  335 000001B2 4618            MOV              R0, R3
  336 000001B4         
  337 000001B4 B401            PUSH             {R0}
  338 000001B6         ;Activates part A of the 7 segment
  339 000001B6 F04F 0020       LDR              R0, =tranB5 ;Activates a single
                                                             transistor
  340 000001BA F7FF FFFE       BL               PortB_Output ;Chamar a função p
                                                            ara acender o trans
                                                            istor de Leds
  341 000001BE BC01            POP{R0}
  342 000001C0 F7FF FFFE       BL               PortQ_Output
  343 000001C4 F7FF FFFE       BL               PortA_Output
  344 000001C8 F04F 0005       MOV              R0, #waitTime ;Chamar a rotina 
                                                            para esperar 0,01s
  345 000001CC F7FF FFFE       BL               SysTick_Wait1ms
  346 000001D0         
  347 000001D0         
  348 000001D0         
  349 000001D0         
  350 000001D0 F04F 0000       MOV              R0, #0      ;Activates a single
                                                             transistor
  351 000001D4 F7FF FFFE       BL               PortB_Output ;Chamar a função p
                                                            ara acender o trans
                                                            istor de Leds
  352 000001D8         
  353 000001D8 4650            MOV              R0, R10



ARM Macro Assembler    Page 8 


  354 000001DA F000 F816       BL               bin2ssd
  355 000001DE 4610            MOV              R0, R2
  356 000001E0         
  357 000001E0 B401            PUSH             {R0}
  358 000001E2         
  359 000001E2         ;Activates part B of the 7 segment
  360 000001E2 F04F 0010       LDR              R0, =tranB4 ;Activates a single
                                                             transistor
  361 000001E6 F7FF FFFE       BL               PortB_Output ;Chamar a função p
                                                            ara acender o trans
                                                            istor de Leds
  362 000001EA BC01            POP{R0}
  363 000001EC F7FF FFFE       BL               PortQ_Output
  364 000001F0 F7FF FFFE       BL               PortA_Output
  365 000001F4 F04F 0001       MOV              R0, #1      ;Chamar a rotina pa
                                                            ra esperar 0,01s
  366 000001F8 F7FF FFFE       BL               SysTick_Wait1ms
  367 000001FC         
  368 000001FC         ;Deactivates part B of the 7 segment
  369 000001FC F04F 0000       MOV              R0, #0      ;Activates a single
                                                             transistor
  370 00000200 F7FF FFFE       BL               PortB_Output ;Chamar a função p
                                                            ara acender o trans
                                                            istor de Leds
  371 00000204         
  372 00000204         
  373 00000204 F85D EB04       POP              {LR}
  374 00000208 4770            BX               LR
  375 0000020A         
  376 0000020A         ; ------------------------------------------------------
                       -------------------------
  377 0000020A         ; Bin to SSD
  378 0000020A         ; Parâmetro de entrada: R0
  379 0000020A         ; Parâmetro de saída: R1 --> binario em formato SSD
  380 0000020A         bin2ssd
  381 0000020A F04F 0164       MOV              R1, #100    ; 
  382 0000020E FBB0 F3F1       UDIV             R3, R0, R1
  383 00000212 FB03 0011       MLS              R0, R3, R1, R0
  384 00000216 F04F 010A       MOV              R1, #10
  385 0000021A FBB0 F2F1       UDIV             R2, R0, R1  ; MSB
  386 0000021E FB02 0311       MLS              R3, R2, R1, R0 ; LSB
  387 00000222 F8DF C01C       LDR              R12, =start_7seg_mem ;start of 
                                                            7 segment display m
                                                            emory
  388 00000226 F04F 0404       MOV              R4, #4      ;memory constant fo
                                                            r each adress 
  389 0000022A FB04 CC02       MLA              R12, R4, R2, R12
  390 0000022E F8DC 2000       LDR              R2, [R12]   ;SSD for MSB
  391 00000232         
  392 00000232 F8DF C00C       LDR              R12, =start_7seg_mem ;start of 
                                                            7 segment display m
                                                            emory
  393 00000236 FB04 CC03       MLA              R12, R4, R3, R12
  394 0000023A F8DC 3000       LDR              R3, [R12]   ;SSD for LSB
  395 0000023E         
  396 0000023E         
  397 0000023E 4770            BX               LR
  398 00000240         
  399 00000240         



ARM Macro Assembler    Page 9 


  400 00000240         
  401 00000240         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  402 00000240         ; Fim do Arquivo
  403 00000240         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  404 00000240                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  405 00000240                 END                          ;Fim do arquivo
              20000A00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\bruno\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000072

Symbol: MainLoop
   Definitions
      At line 114 in file main.s
   Uses
      At line 127 in file main.s
Comment: MainLoop used once
Start 00000056

Symbol: Start
   Definitions
      At line 103 in file main.s
   Uses
      At line 32 in file main.s
Comment: Start used once
asc 00000196

Symbol: asc
   Definitions
      At line 310 in file main.s
   Uses
      At line 306 in file main.s
Comment: asc used once
asc_reset 0000014E

Symbol: asc_reset
   Definitions
      At line 267 in file main.s
   Uses
      At line 262 in file main.s
Comment: asc_reset used once
bin2ssd 0000020A

Symbol: bin2ssd
   Definitions
      At line 380 in file main.s
   Uses
      At line 334 in file main.s
      At line 354 in file main.s

checkButtons 000000DA

Symbol: checkButtons
   Definitions
      At line 188 in file main.s
   Uses
      At line 139 in file main.s
Comment: checkButtons used once
checkCounter 00000124




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: checkCounter
   Definitions
      At line 241 in file main.s
   Uses
      At line 138 in file main.s
Comment: checkCounter used once
checkStepper 000000A6

Symbol: checkStepper
   Definitions
      At line 151 in file main.s
   Uses
      At line 140 in file main.s
Comment: checkStepper used once
count 00000186

Symbol: count
   Definitions
      At line 303 in file main.s
   Uses
      At line 137 in file main.s
Comment: count used once
desc_reset 00000138

Symbol: desc_reset
   Definitions
      At line 254 in file main.s
   Uses
      At line 249 in file main.s
Comment: desc_reset used once
mem7seg_init 00000000

Symbol: mem7seg_init
   Definitions
      At line 63 in file main.s
   Uses
      At line 108 in file main.s
Comment: mem7seg_init used once
overStep 000000C4

Symbol: overStep
   Definitions
      At line 170 in file main.s
   Uses
      At line 155 in file main.s
Comment: overStep used once
over_reset 000000D0

Symbol: over_reset
   Definitions
      At line 177 in file main.s
   Uses
      At line 172 in file main.s
Comment: over_reset used once
overflow 00000142

Symbol: overflow
   Definitions
      At line 260 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 245 in file main.s
Comment: overflow used once
seg7_show 000001AA

Symbol: seg7_show
   Definitions
      At line 329 in file main.s
   Uses
      At line 122 in file main.s
Comment: seg7_show used once
showLeds 00000158

Symbol: showLeds
   Definitions
      At line 276 in file main.s
   Uses
      At line 123 in file main.s
Comment: showLeds used once
stepUp 0000011A

Symbol: stepUp
   Definitions
      At line 229 in file main.s
   Uses
      At line 221 in file main.s
Comment: stepUp used once
stepper 00000108

Symbol: stepper
   Definitions
      At line 217 in file main.s
   Uses
      At line 198 in file main.s
Comment: stepper used once
switchStep 0000019E

Symbol: switchStep
   Definitions
      At line 319 in file main.s
   Uses
      At line 205 in file main.s
Comment: switchStep used once
under_reset 000000BA

Symbol: under_reset
   Definitions
      At line 164 in file main.s
   Uses
      At line 159 in file main.s
Comment: under_reset used once
updateNumber 0000008E

Symbol: updateNumber
   Definitions
      At line 134 in file main.s
   Uses
      At line 121 in file main.s
Comment: updateNumber used once



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

delayTime 00000005

Symbol: delayTime
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: delayTime unused
end_7seg_mem 20000A24

Symbol: end_7seg_mem
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: end_7seg_mem unused
end_led_mem 20000C24

Symbol: end_led_mem
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: end_led_mem unused
start_7seg_mem 20000A00

Symbol: start_7seg_mem
   Definitions
      At line 49 in file main.s
   Uses
      At line 64 in file main.s
      At line 387 in file main.s
      At line 392 in file main.s

start_led_mem 20000C00

Symbol: start_led_mem
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: start_led_mem unused
tranB4 00000010

Symbol: tranB4
   Definitions
      At line 56 in file main.s
   Uses
      At line 360 in file main.s
Comment: tranB4 used once
tranB5 00000020

Symbol: tranB5
   Definitions
      At line 57 in file main.s
   Uses
      At line 339 in file main.s
Comment: tranB5 used once
tranP 00000020



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: tranP
   Definitions
      At line 55 in file main.s
   Uses
      At line 282 in file main.s
Comment: tranP used once
waitTime 00000005

Symbol: waitTime
   Definitions
      At line 59 in file main.s
   Uses
      At line 344 in file main.s
Comment: waitTime used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 106 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 38 in file main.s
   Uses
      At line 104 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 44 in file main.s
   Uses
      At line 287 in file main.s
      At line 343 in file main.s
      At line 364 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 45 in file main.s
   Uses
      At line 340 in file main.s
      At line 351 in file main.s
      At line 361 in file main.s
      At line 370 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 46 in file main.s
   Uses
      At line 192 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 42 in file main.s
   Uses
      At line 283 in file main.s
      At line 292 in file main.s

PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 43 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Uses
      At line 286 in file main.s
      At line 342 in file main.s
      At line 363 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 105 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 40 in file main.s
   Uses
      At line 289 in file main.s
      At line 345 in file main.s
      At line 366 in file main.s

9 symbols
377 symbols in table
